"use strict";var FOUR=FOUR||{};FOUR.BoundingBox=function(){function BoundingBox(name){THREE.Object3D.call(this),this.depth=0,this.envelope=null,this.height=0,this.name=name,this.width=0,this.visible=!1,this.reset()}return BoundingBox.prototype=Object.create(THREE.Object3D.prototype),BoundingBox.prototype.constructor=BoundingBox,BoundingBox.prototype.getCenter=function(){return this.position},BoundingBox.prototype.getEnvelope=function(){return this.envelope},BoundingBox.prototype.getRadius=function(){return this.helper.geometry.boundingSphere.radius},BoundingBox.prototype.getXDimension=function(){return this.width},BoundingBox.prototype.getYDimension=function(){return this.depth},BoundingBox.prototype.getZDimension=function(){return this.height},BoundingBox.prototype.reset=function(){var self=this;self.position.set(0,0,0),self.envelope=new THREE.Box3(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,0)),self.children.forEach(function(obj){self.remove(obj)});var geom=new THREE.BoxGeometry(1,1,1),mesh=new THREE.Mesh(geom);self.helper=new THREE.BoxHelper(mesh)},BoundingBox.prototype.toggleVisibility=function(){var self=this;self.visible=!self.visible},BoundingBox.prototype.update=function(objects){var self=this;if(self.reset(),objects&&objects.length>0){self.envelope.setFromObject(objects[0]),objects.forEach(function(obj){var objEnv=new THREE.Box3(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,0));objEnv.setFromObject(obj),self.envelope.union(objEnv)}),self.width=self.envelope.max.x-self.envelope.min.x,self.depth=self.envelope.max.y-self.envelope.min.y,self.height=self.envelope.max.z-self.envelope.min.z;var geom=new THREE.BoxGeometry(self.width,self.depth,self.height),mesh=new THREE.Mesh(geom);self.helper=new THREE.BoxHelper(mesh),self.add(self.helper)}else self.visible=!1;self.position.set(self.envelope.min.x+self.width/2,self.envelope.min.y+self.depth/2,self.envelope.min.z+self.height/2)},BoundingBox}();var FOUR=FOUR||{};FOUR.KEY={},FOUR.MOUSE_STATE={DOWN:0,MOVE:1,UP:2},FOUR.SINGLE_CLICK_TIMEOUT=400;var FOUR=FOUR||{};FOUR.KeyInputController=function(){function KeyInputController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.KEYS={ALT:"alt",CTRL:"ctrl",CTRL_A:"ctrl+a",CTRL_N:"ctrl+n",DOWN:"down",LEFT:"left",META:"meta",RIGHT:"right",SHIFT:"shift",UP:"up"},self.enabled=config.enabled||!1,self.modifiers={},Object.keys(self.KEYS).forEach(function(key){self.modifiers[self.KEYS[key]]=!1}),Mousetrap.bind("alt",function(evt){self.keydown(self.KEYS.ALT,evt)},"keydown"),Mousetrap.bind("alt",function(evt){self.keyup(self.KEYS.ALT,evt)},"keyup"),Mousetrap.bind("ctrl",function(evt){self.keydown(self.KEYS.CTRL,evt)},"keydown"),Mousetrap.bind("ctrl",function(evt){self.keyup(self.KEYS.CTRL,evt)},"keyup"),Mousetrap.bind("shift",function(evt){self.keydown(self.KEYS.SHIFT,evt)},"keydown"),Mousetrap.bind("shift",function(evt){self.keyup(self.KEYS.SHIFT,evt)},"keyup"),Mousetrap.bind("ctrl+a",function(evt){self.keyup(self.KEYS.CTRL_A,evt)}),Mousetrap.bind("ctrl+n",function(evt){self.keyup(self.KEYS.CTRL_N,evt)}),Mousetrap.bind("i",function(evt){self.keydown(self.KEYS.UP,evt)},"keydown"),Mousetrap.bind("i",function(evt){self.keyup(self.KEYS.UP,evt)},"keyup"),Mousetrap.bind("k",function(evt){self.keydown(self.KEYS.DOWN,evt)},"keydown"),Mousetrap.bind("k",function(evt){self.keyup(self.KEYS.DOWN,evt)},"keyup"),Mousetrap.bind("j",function(evt){self.keydown(self.KEYS.LEFT,evt)},"keydown"),Mousetrap.bind("j",function(evt){self.keyup(self.KEYS.LEFT,evt)},"keyup"),Mousetrap.bind("l",function(evt){self.keydown(self.KEYS.RIGHT,evt)},"keydown"),Mousetrap.bind("l",function(evt){self.keyup(self.KEYS.RIGHT,evt)},"keyup"),Mousetrap.bind("u",function(evt){self.keydown(self.KEYS.RIGHT,evt)},"keydown"),Mousetrap.bind("u",function(evt){self.keyup(self.KEYS.RIGHT,evt)},"keyup"),Mousetrap.bind("o",function(evt){self.keydown(self.KEYS.RIGHT,evt)},"keydown"),Mousetrap.bind("o",function(evt){self.keyup(self.KEYS.RIGHT,evt)},"keyup")}return KeyInputController.prototype=Object.create(THREE.EventDispatcher.prototype),KeyInputController.prototype.constructor=KeyInputController,KeyInputController.prototype.keydown=function(key,evt){this.modifiers[key]=!0,this.dispatchEvent({type:"keydown",key:key,keyCode:evt?evt.keyCode:null})},KeyInputController.prototype.keyup=function(key,evt){this.modifiers[key]=!1,this.dispatchEvent({type:"keyup",key:key,keyCode:evt?evt.keyCode:null})},KeyInputController.prototype.register=function(command,callback){throw new Error("not implemented")},KeyInputController}();var FOUR=FOUR||{};FOUR.PathPlanner=function(){function distance(p1,p2){var dx=Math.pow(p2.x+p1.x,2),dy=Math.pow(p2.y+p1.y,2),dz=Math.pow(p2.z+p1.z,2);return Math.sqrt(dx+dy+dz)}function PathPlanner(){var self=this;self.PLANNING_STRATEGY={GENETIC:0,SIMULATED_ANNEALING:1}}return PathPlanner.prototype.generateTourSequence=function(features,strategy){return new Promise(function(resolve,reject){var path=[];if(features.length>0){var ts=new TravellingSalesman(50);features.forEach(function(obj){ts.addPoint({focus:0,obj:obj,radius:obj.geometry.boundingSphere.radius,x:obj.position.x,y:obj.position.y,z:obj.position.z})}),ts.init(),console.info("Initial distance: "+ts.getPopulation().getFittest().getDistance());try{ts.evolve(100),console.info("Final distance: "+ts.getPopulation().getFittest().getDistance()),path=ts.getSolution()}catch(e){reject(e)}}resolve(path)})},PathPlanner.prototype.tweenToOrientation=function(camera,orientation,progress){return new Promise(function(resolve){var emit=progress,start={x:camera.up.x,y:camera.up.y,z:camera.up.z},finish={x:orientation.x,y:orientation.y,z:orientation.z},tween=new TWEEN.Tween(start).to(finish,1e3);tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(function(){resolve()}),tween.onUpdate(function(){camera.setUp(new THREE.Vector3(this.x,this.y,this.z)),emit("update")}),tween.start(),emit("update")})},PathPlanner.prototype.tweenToPosition=function(camera,position,target,progress){return new Promise(function(resolve){var emit=progress,start={x:camera.position.x,y:camera.position.y,z:camera.position.z,tx:camera.target.x,ty:camera.target.y,tz:camera.target.z},finish={x:position.x,y:position.y,z:position.z,tx:target.x,ty:target.y,tz:target.z},tween=(distance(camera.position,position),distance(camera.target,target),new TWEEN.Tween(start).to(finish,1500));tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(function(){resolve()}),tween.onUpdate(function(){var tweened=this;camera.distance=distance(camera.position,camera.target),camera.lookAt(new THREE.Vector3(tweened.tx,tweened.ty,tweened.tz)),camera.position.set(tweened.x,tweened.y,tweened.z),camera.target.set(tweened.tx,tweened.ty,tweened.tz),emit("update")}),tween.start(),emit("update")})},PathPlanner}();var FOUR=FOUR||{};FOUR.Scene=function(){function Scene(){THREE.Scene.call(this);var self=this;self.boundingBox=new FOUR.BoundingBox("scene-bounding-box"),self.cameras=new THREE.Object3D,self.helpers=new THREE.Object3D,self.lights=new THREE.Object3D,self.model=new THREE.Object3D,self.selection=new FOUR.SelectionSet({scene:self}),self.add(self.cameras),self.add(self.lights),self.add(self.model),self.add(self.helpers),self.helpers.add(self.boundingBox),self.selection.addEventListener("update",function(){self.boundingBox.update(self.selection.getObjects())})}return Scene.prototype=Object.create(THREE.Scene.prototype),Scene.prototype.DEFAULT_CAMERA_NAME="camera1",Scene.prototype.constructor=Scene,Scene.prototype.createDefaultCamera=function(config){var self=this,cfg={far:1e3,fov:45,height:1,near:.1,width:1};Object.keys(config).forEach(function(key){cfg[key]=config[key]});var camera=new FOUR.TargetCamera(cfg.fov,cfg.width/cfg.height,cfg.near,cfg.far);camera.name=self.DEFAULT_CAMERA_NAME,self.cameras.add(camera),camera.setPositionAndTarget(-50,-50,50,0,0,0),camera.addEventListener("continuous-update-end",function(){self.emit("continuous-update-end")}),camera.addEventListener("continuous-update-start",function(){self.emit("continuous-update-start")}),camera.addEventListener("update",function(){self.emit("update")})},Scene.prototype.emit=function(type){this.dispatchEvent({type:type})},Scene.prototype.getCamera=function(name){var self=this;return self.getCameras(function(obj){return obj.name===name}).pop()},Scene.prototype.getCameras=function(filter){var cameras=[],self=this;return filter||(filter=filter||function(){return!0}),self.cameras.traverse(function(obj){filter(obj)&&cameras.push(obj)}),cameras},Scene.prototype.getLight=function(name){throw new Error("not implemented")},Scene.prototype.getLights=function(){throw new Error("not implemented")},Scene.prototype.load=function(){throw new Error("not implemented")},Scene}();var FOUR=FOUR||{};FOUR.SelectionSet=function(){function SelectionSet(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.count=0,self.name="selection-set",self.selectedColor=16734720,self.selection={},Object.keys(config).forEach(function(key){self[key]=config[key]})}return SelectionSet.prototype=Object.create(THREE.EventDispatcher.prototype),SelectionSet.prototype.constructor=SelectionSet,SelectionSet.prototype.add=function(obj,filter,update){var self=this;filter=filter||self.defaultFilter,filter(obj)&&(self.selection[obj.uuid]=obj,self.select(obj)),self.count=Object.keys(self.selection).length,update&&update===!0&&self.dispatchEvent({type:"update"})},SelectionSet.prototype.addAll=function(objects){if(!(objects.length<1)){var self=this;objects.forEach(function(obj){self.add(obj,null,!1)}),self.dispatchEvent({type:"update"})}},SelectionSet.prototype.defaultFilter=function(){return!0},SelectionSet.prototype.deselect=function(obj){obj.userData.hasOwnProperty("color")&&(obj.material.color.set(obj.userData.color),obj.userData.color=null)},SelectionSet.prototype.getBoundingBox=function(){var self=this,objs=self.getObjects(),bbox=new FOUR.BoundingBox;return bbox.name=self.name+"-bounding-box",bbox.update(objs),bbox},SelectionSet.prototype.getObjects=function(){var objects=[],self=this;return Object.keys(self.selection).forEach(function(key){objects.push(self.selection[key])}),objects},SelectionSet.prototype.remove=function(obj,update){var self=this;self.deselect(obj),delete self.selection[obj.uuid],self.count=Object.keys(self.selection).length,update&&update===!0&&self.dispatchEvent({type:"update"})},SelectionSet.prototype.removeAll=function(objects){var self=this;if(objects){if(!(objects.length>0))return;objects.forEach(function(obj){self.remove(obj,!1)})}else Object.keys(self.selection).forEach(function(uuid){self.remove(self.selection[uuid],!1)});self.dispatchEvent({type:"update"})},SelectionSet.prototype.select=function(obj){var self=this;obj.material&&obj.material.color&&(obj.userData.color=new THREE.Color(obj.material.color.r,obj.material.color.g,obj.material.color.b),obj.material.color.set(self.selectedColor))},SelectionSet.prototype.toggle=function(objects){var self=this,selected=objects.reduce(function(map,obj){return map[obj.uuid]=obj,map},{});if(Object.keys(selected).length>0)Object.keys(self.selection).forEach(function(uuid){selected[uuid]||self.remove(self.selection[uuid],!1)}),Object.keys(selected).forEach(function(uuid){self.selection[uuid]?self.remove(self.selection[uuid],!1):self.add(selected[uuid],null,!1)});else{var objs=Object.keys(self.selection).reduce(function(list,uuid){return list.push(self.selection[uuid]),list},[]);self.removeAll(objs)}self.dispatchEvent({type:"update"})},SelectionSet}();var FOUR=FOUR||{};FOUR.TargetCamera=function(){function distance(p1,p2){var dx=Math.pow(p2.x+p1.x,2),dy=Math.pow(p2.y+p1.y,2),dz=Math.pow(p2.z+p1.z,2);return Math.sqrt(dx+dy+dz)}function TargetCamera(fov,aspect,near,far){THREE.PerspectiveCamera.call(this);var geometry,material,self=this;self.VIEWS={TOP:0,LEFT:1,RIGHT:2,FRONT:3,BACK:4,PERSPECTIVE:5},self.ZOOM_FACTOR=1.5,self.aspect=aspect,self.far=far,self.fov=fov,self.near=near,self.up=new THREE.Vector3(0,0,1),self.updateProjectionMatrix(),self.distance=100,self.target=new THREE.Vector3(0,0,self.distance),self.planner=new FOUR.PathPlanner,self.frustrum=new THREE.CameraHelper(self),self.frustrum.visible=!1,self.add(self.frustrum),geometry=new THREE.BoxGeometry(1,1,1),material=new THREE.MeshBasicMaterial({color:255}),self.targetHelper=new THREE.Mesh(geometry,material),self.targetHelper.position.set(0,0,-100),self.targetHelper.name="target",self.targetHelper.visible=!1,self.add(self.targetHelper),self.lookAt(self.target),self.distance=self.getDistance(self.position,self.target)}return TargetCamera.prototype=Object.create(THREE.PerspectiveCamera.prototype),TargetCamera.prototype.constructor=TargetCamera,TargetCamera.prototype.emit=function(event){this.dispatchEvent({type:event})},TargetCamera.prototype.getDistance=function(){return this.distance},TargetCamera.prototype.getTarget=function(){return this.target},TargetCamera.prototype.handleResize=function(){throw new Error("not implemented")},TargetCamera.prototype.hideFrustrum=function(){this.frustrum.visible=!1,this.emit("update")},TargetCamera.prototype.hideTarget=function(){this.targetHelper.visible=!1,this.emit("update")},TargetCamera.prototype.resetOrientation=function(progress){var self=this;return self.planner.tweenToOrientation(self,new THREE.Vector3(0,0,1),progress||self.emit.bind(self))},TargetCamera.prototype.setDistance=function(dist){console.log("update the camera distance from target");var offset,distance,next,self=this;return self.distance=dist,offset=(new THREE.Vector3).subVectors(self.position,self.target),distance=offset.length(),offset.setLength(dist),next=(new THREE.Vector3).addVectors(self.target,offset),self.planner.tweenToPosition(self,new THREE.Vector3(next.x,next.y,next.z),self.target,self.emit.bind(self))},TargetCamera.prototype.setUp=function(vec){this.up=vec,this.emit("update")},TargetCamera.prototype.setLookAt=function(x,y,z){var self=this,target=new THREE.Vector3(x,y,z);return self.planner.tweenToPosition(self,self.position,target,self.emit.bind(self))},TargetCamera.prototype.setPosition=function(x,y,z){var self=this;return self.planner.tweenToPosition(self,new THREE.Vector3(x,y,z),self.target,self.emit.bind(self))},TargetCamera.prototype.setPositionAndTarget=function(x,y,z,tx,ty,tz){var self=this;return self.distance=distance(new THREE.Vector3(x,y,z),new THREE.Vector3(tx,ty,tz)),self.planner.tweenToPosition(self,new THREE.Vector3(x,y,z),new THREE.Vector3(tx,ty,tz),self.emit.bind(self))},TargetCamera.prototype.setTarget=function(x,y,z){var offset,next,self=this,target=new THREE.Vector3(x,y,z);return offset=(new THREE.Vector3).subVectors(self.position,self.target),offset.length(self.distance),next=(new THREE.Vector3).addVectors(target,offset),self.planner.tweenToPosition(self,new THREE.Vector3(next.x,next.y,next.z),target,self.emit.bind(self))},TargetCamera.prototype.setView=function(view,bbox){var dist,height,offset,self=this,center=bbox.getCenter(),cx=center.x,cy=center.y,cz=center.z,tx=center.x,ty=center.y,tz=center.z;view===self.VIEWS.TOP?(height=bbox.getYDimension(),offset=bbox.getZDimension()/2,dist=height/2/Math.tan(Math.PI*self.fov/360),cz=center.z+dist+offset):view===self.VIEWS.FRONT?(height=bbox.getZDimension(),offset=bbox.getYDimension()/2,dist=height/2/Math.tan(Math.PI*self.fov/360),cy=center.y-dist-offset):view===self.VIEWS.BACK?(height=bbox.getZDimension(),offset=bbox.getYDimension()/2,dist=height/2/Math.tan(Math.PI*self.fov/360),cy=center.y+dist+offset):view===self.VIEWS.RIGHT?(height=bbox.getZDimension(),offset=bbox.getXDimension()/2,dist=height/2/Math.tan(Math.PI*self.fov/360),cx=center.x+dist+offset):view===self.VIEWS.LEFT?(height=bbox.getZDimension(),offset=bbox.getXDimension()/2,dist=height/2/Math.tan(Math.PI*self.fov/360),cx=center.x-dist-offset):view===self.VIEWS.PERSPECTIVE&&(cx=center.x-50,cy=center.y-50,cz=center.z+50,tx=center.x,ty=center.y,tz=center.z),self.planner.tweenToPosition(self,new THREE.Vector3(cx,cy,cz),new THREE.Vector3(tx,ty,tz),self.emit.bind(self))},TargetCamera.prototype.showFrustrum=function(){var self=this;self.frustrum.visible=!0,this.emit("update")},TargetCamera.prototype.showTarget=function(){this.targetHelper.visible=!0,this.emit("update")},TargetCamera.prototype.translate=function(x,y,z){var self=this;self.position.add(new THREE.Vector3(x,y,z)),self.target.add(new THREE.Vector3(x,y,z))},TargetCamera.prototype.zoomIn=function(){var offset,distance,next,self=this;return offset=(new THREE.Vector3).subVectors(self.position,self.target),distance=offset.length(),offset.setLength(distance/self.ZOOM_FACTOR),next=(new THREE.Vector3).addVectors(self.target,offset),self.planner.tweenToPosition(self,new THREE.Vector3(next.x,next.y,next.z),self.target,self.emit.bind(self))},TargetCamera.prototype.zoomOut=function(){var offset,distance,next,self=this;return offset=(new THREE.Vector3).subVectors(self.position,self.target),distance=offset.length(),offset.setLength(distance*self.ZOOM_FACTOR),next=(new THREE.Vector3).addVectors(self.target,offset),self.planner.tweenToPosition(self,new THREE.Vector3(next.x,next.y,next.z),self.target,self.emit.bind(self))},TargetCamera.prototype.zoomToFit=function(bbox){var direction,distance,next,self=this;return direction=(new THREE.Vector3).subVectors(self.position,self.target),distance=bbox.getRadius()/Math.tan(Math.PI*self.fov/360),direction.setLength(distance),next=(new THREE.Vector3).addVectors(bbox.getCenter(),direction),self.planner.tweenToPosition(self,new THREE.Vector3(next.x,next.y,next.z),bbox.getCenter(),self.emit.bind(self))},TargetCamera.prototype.zoomToWindow=function(){throw new Error("zoom in to window")},TargetCamera}();var FOUR=FOUR||{};FOUR.Viewcube=function(){function Viewcube(elementId){THREE.EventDispatcher.call(this),this.FACES={TOP:0,FRONT:1,RIGHT:2,BACK:3,LEFT:4,BOTTOM:5,TOP_FRONT_EDGE:6,TOP_RIGHT_EDGE:7,TOP_BACK_EDGE:8,TOP_LEFT_EDGE:9,FRONT_RIGHT_EDGE:10,BACK_RIGHT_EDGE:11,BACK_LEFT_EDGE:12,FRONT_LEFT_EDGE:13,BOTTOM_FRONT_EDGE:14,BOTTOM_RIGHT_EDGE:15,BOTTOM_BACK_EDGE:16,BOTTOM_LEFT_EDGE:17,TOP_FRONT_RIGHT_CORNER:18,TOP_BACK_RIGHT_CORNER:19,TOP_BACK_LEFT_CORNER:20,TOP_FRONT_LEFT_CORNER:21,BOTTOM_FRONT_RIGHT_CORNER:22,BOTTOM_BACK_RIGHT_CORNER:23,BOTTOM_BACK_LEFT_CORNER:24,BOTTOM_FRONT_LEFT_CORNER:25},this.MODES={SELECT:0,READONLY:1},this.OFFSET=250,this.ROTATION_0=0,this.ROTATION_90=Math.PI/2,this.ROTATION_180=Math.PI,this.ROTATION_270=1.5*Math.PI,this.ROTATION_360=2*Math.PI,this.COMPASS_COLOR=6710886,this.COMPASS_OPACITY=.8,this.FACE_COLOUR=4874096,this.FACE_OPACITY_MOUSE_OFF=0,this.FACE_OPACITY_MOUSE_OVER=.8,this.backgroundColor=new THREE.Color(0,0),this.camera=null,this.compass=null,this.control=null,this.cube=null,this.domElement=document.getElementById(elementId),this.elementId=elementId,this.fov=60,this.mouse=new THREE.Vector2,this.raycaster=new THREE.Raycaster,this.renderer=null,this.scene=new THREE.Scene}return Viewcube.prototype=Object.create(THREE.EventDispatcher.prototype),Viewcube.prototype.constructor=Viewcube,Viewcube.prototype.init=function(){var self=this;self.renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),self.renderer.setSize(self.domElement.clientWidth,self.domElement.clientHeight),self.renderer.shadowMap.enabled=!0,self.domElement.appendChild(self.renderer.domElement),self.setupCamera(),self.setupGeometry(),self.setupLights(),self.setupNavigation(),self.setupSelection(),self.render()},Viewcube.prototype.makeCompass=function(name,x,y,z,radius,segments,color,opacity){var obj=new THREE.Object3D,material=new THREE.MeshBasicMaterial({color:color}),circleGeometry=new THREE.CircleGeometry(radius,segments),circle=new THREE.Mesh(circleGeometry,material);return obj.add(circle),obj.name=name,obj.opacity=opacity,obj.position.x=x,obj.position.y=y,obj.position.z=z,obj},Viewcube.prototype.makeCorner=function(name,w,x,y,z,rotations,color){var face1,face2,face3,geometry,material,obj,self=this;return obj=new THREE.Object3D,geometry=new THREE.PlaneGeometry(w,w),material=new THREE.MeshBasicMaterial({color:color,opacity:self.FACE_OPACITY_MOUSE_OFF,transparent:!0}),face1=new THREE.Mesh(geometry,material),face1.material.side=THREE.DoubleSide,face1.name=name,face1.position.setX(w/2),face1.position.setY(w/2),geometry=new THREE.PlaneGeometry(w,w),face2=new THREE.Mesh(geometry,material),face2.material.side=THREE.DoubleSide,face2.name=name,face2.position.setX(w/2),face2.position.setZ(-w/2),face2.rotateOnAxis(new THREE.Vector3(1,0,0),Math.PI/2),geometry=new THREE.PlaneGeometry(w,w),face3=new THREE.Mesh(geometry,material),face3.material.side=THREE.DoubleSide,face3.name=name,face3.position.setY(w/2),face3.position.setZ(-w/2),face3.rotateOnAxis(new THREE.Vector3(0,1,0),Math.PI/2),obj.add(face1),obj.add(face2),obj.add(face3),obj.name=name,obj.position.x=x,obj.position.y=y,obj.position.z=z,rotations.forEach(function(rotation){obj.rotateOnAxis(rotation.axis,rotation.rad)}),obj},Viewcube.prototype.makeEdge=function(name,w,h,x,y,z,rotations,color){var face1,face2,geometry,material,obj,self=this;return obj=new THREE.Object3D,geometry=new THREE.PlaneGeometry(w,h),material=new THREE.MeshBasicMaterial({color:color,opacity:self.FACE_OPACITY_MOUSE_OFF,transparent:!0}),face1=new THREE.Mesh(geometry,material),face1.material.side=THREE.DoubleSide,face1.name=name,face1.position.setY(h/2),geometry=new THREE.PlaneGeometry(w,h),face2=new THREE.Mesh(geometry,material),face2.material.side=THREE.DoubleSide,face2.name=name,face2.position.setZ(-h/2),face2.rotateOnAxis(new THREE.Vector3(1,0,0),Math.PI/2),obj.add(face1),obj.add(face2),obj.name=name,obj.position.x=x,obj.position.y=y,obj.position.z=z,rotations.forEach(function(rotation){obj.rotateOnAxis(rotation.axis,rotation.rad)}),obj},Viewcube.prototype.makeFace=function(name,w,x,y,z,rotations,color){var self=this,geometry=new THREE.PlaneGeometry(w,w),material=new THREE.MeshBasicMaterial({color:color,opacity:self.FACE_OPACITY_MOUSE_OFF,transparent:!0}),face=new THREE.Mesh(geometry,material);return face.material.side=THREE.DoubleSide,face.name=name,face.position.setX(x),face.position.setY(y),face.position.setZ(z),rotations.forEach(function(rotation){face.rotateOnAxis(rotation.axis,rotation.rad)}),face},Viewcube.prototype.onMouseMove=function(event){var self=this;self.mouse.x=event.offsetX/self.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetY/self.domElement.clientHeight)+1,self.raycaster.setFromCamera(self.mouse,self.camera),self.scene.traverse(function(obj){"labels"!==obj.name&&obj.material&&(obj.material.opacity=self.FACE_OPACITY_MOUSE_OFF)});var intersects=self.raycaster.intersectObjects(self.scene.children,!0);intersects.length>0&&"labels"!==intersects[0].object.name&&(intersects[0].object.material.opacity=self.FACE_OPACITY_MOUSE_OVER)},Viewcube.prototype.onMouseOver=function(event){var self=this;requestAnimationFrame(self.render.bind(self))},Viewcube.prototype.onMouseUp=function(event){var self=this;self.mouse.x=event.offsetX/self.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetX/self.domElement.clientWidth)+1,self.raycaster.setFromCamera(self.mouse,self.camera),self.selection=[];var intersects=self.raycaster.intersectObjects(self.scene.children,!0);intersects.length>0&&self.setView(intersects[0].object.name)},Viewcube.prototype.render=function(){var self=this;self.renderer.render(self.scene,self.camera)},Viewcube.prototype.setupCamera=function(){var self=this;self.camera=new THREE.PerspectiveCamera(self.fov,self.domElement.clientWidth/self.domElement.clientHeight,.1,1e3),self.camera.position.x=150,self.camera.position.y=150,self.camera.position.z=90,self.camera.up=new THREE.Vector3(0,0,1),self.camera.lookAt(new THREE.Vector3(0,0,0))},Viewcube.prototype.setupGeometry=function(){var self=this,ROTATE_0=0,ROTATE_90=Math.PI/2,ROTATE_180=Math.PI,ROTATE_270=1.5*Math.PI,ROTATE_360=2*Math.PI,X_AXIS=new THREE.Vector3(1,0,0),Y_AXIS=new THREE.Vector3(0,1,0),Z_AXIS=new THREE.Vector3(0,0,1);self.control=new THREE.Object3D,self.cube=new THREE.Object3D;var material1=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/top.png"),opacity:1,transparent:!0}),material2=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/front.png"),opacity:1,transparent:!0}),material3=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/right.png"),opacity:1,transparent:!0}),material4=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/back.png"),opacity:1,transparent:!0}),material5=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/left.png"),opacity:1,transparent:!0}),material6=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/bottom.png"),opacity:1,transparent:!0}),materials=[material2,material5,material3,material4,material1,material6],geometry=new THREE.BoxGeometry(99,99,99),material=new THREE.MeshFaceMaterial(materials),labels=new THREE.Mesh(geometry,material);labels.name="labels",self.scene.add(labels);var topFace=self.makeFace(self.FACES.TOP,70,0,0,50,[{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),frontFace=self.makeFace(self.FACES.FRONT,70,50,0,0,[{axis:Y_AXIS,rad:ROTATE_90},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),rightFace=self.makeFace(self.FACES.RIGHT,70,0,50,0,[{axis:X_AXIS,rad:ROTATE_270},{axis:Z_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),leftFace=self.makeFace(self.FACES.LEFT,70,0,-50,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Z_AXIS,rad:ROTATE_360}],self.FACE_COLOUR),backFace=self.makeFace(self.FACES.BACK,70,-50,0,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_270}],self.FACE_COLOUR),bottomFace=self.makeFace(self.FACES.BOTTOM,70,0,0,-50,[{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),topFrontEdge=self.makeEdge(self.FACES.TOP_FRONT_EDGE,70,15,50,0,50,[{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),topRightEdge=self.makeEdge(self.FACES.TOP_RIGHT_EDGE,70,15,0,50,50,[{axis:Z_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),topBackEdge=self.makeEdge(self.FACES.TOP_BACK_EDGE,70,15,-50,0,50,[{axis:Z_AXIS,rad:ROTATE_270}],self.FACE_COLOUR),topLeftEdge=self.makeEdge(self.FACES.TOP_LEFT_EDGE,70,15,0,-50,50,[{axis:Z_AXIS,rad:ROTATE_360}],self.FACE_COLOUR),bottomFrontEdge=self.makeEdge(self.FACES.BOTTOM_FRONT_EDGE,70,15,50,0,-50,[{axis:Z_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),bottomRightEdge=self.makeEdge(self.FACES.BOTTOM_RIGHT_EDGE,70,15,0,50,-50,[{axis:Z_AXIS,rad:ROTATE_180},{axis:Y_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),bottomBackEdge=self.makeEdge(self.FACES.BOTTOM_BACK_EDGE,70,15,-50,0,-50,[{axis:Z_AXIS,rad:ROTATE_270},{axis:Y_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),bottomLeftEdge=self.makeEdge(self.FACES.BOTTOM_LEFT_EDGE,70,15,0,-50,-50,[{axis:Z_AXIS,rad:ROTATE_360},{axis:Y_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),frontRightEdge=self.makeEdge(self.FACES.FRONT_RIGHT_EDGE,70,15,50,50,0,[{axis:X_AXIS,rad:ROTATE_180},{axis:Y_AXIS,rad:ROTATE_90},{axis:Z_AXIS,rad:0}],self.FACE_COLOUR),backRightEdge=self.makeEdge(self.FACES.BACK_RIGHT_EDGE,70,15,-50,50,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),backLeftEdge=self.makeEdge(self.FACES.BACK_LEFT_EDGE,70,15,-50,-50,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_270},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),frontLeftEdge=self.makeEdge(self.FACES.FRONT_LEFT_EDGE,70,15,50,-50,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_360},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),topFrontLeftCorner=self.makeCorner(self.FACES.TOP_FRONT_LEFT_CORNER,15,50,-50,50,[{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),topFrontRightCorner=self.makeCorner(self.FACES.TOP_FRONT_RIGHT_CORNER,15,50,50,50,[{axis:Z_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),topBackRightCorner=self.makeCorner(self.FACES.TOP_BACK_RIGHT_CORNER,15,-50,50,50,[{axis:Z_AXIS,rad:ROTATE_270}],self.FACE_COLOUR),topBackLeftCorner=self.makeCorner(self.FACES.TOP_BACK_LEFT_CORNER,15,-50,-50,50,[{axis:Z_AXIS,rad:ROTATE_360}],self.FACE_COLOUR),bottomFrontLeftCorner=self.makeCorner(self.FACES.BOTTOM_FRONT_LEFT_CORNER,15,50,-50,-50,[{axis:X_AXIS,rad:ROTATE_0},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_0}],self.FACE_COLOUR),bottomFrontRightCorner=self.makeCorner(self.FACES.BOTTOM_FRONT_RIGHT_CORNER,15,50,50,-50,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_0}],self.FACE_COLOUR),bottomBackRightCorner=self.makeCorner(self.FACES.BOTTOM_BACK_RIGHT_CORNER,15,-50,50,-50,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),bottomBackLeftCorner=self.makeCorner(self.FACES.BOTTOM_BACK_LEFT_CORNER,15,-50,-50,-50,[{axis:X_AXIS,rad:ROTATE_0},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR);self.cube.add(topFace),self.cube.add(frontFace),self.cube.add(rightFace),self.cube.add(backFace),self.cube.add(leftFace),self.cube.add(bottomFace),self.cube.add(topFrontEdge),self.cube.add(topRightEdge),self.cube.add(topBackEdge),self.cube.add(topLeftEdge),self.cube.add(bottomFrontEdge),self.cube.add(bottomRightEdge),self.cube.add(bottomBackEdge),self.cube.add(bottomLeftEdge),self.cube.add(frontRightEdge),self.cube.add(backRightEdge),self.cube.add(backLeftEdge),self.cube.add(frontLeftEdge),self.cube.add(topFrontLeftCorner),self.cube.add(topFrontRightCorner),self.cube.add(topBackRightCorner),self.cube.add(topBackLeftCorner),self.cube.add(bottomFrontLeftCorner),self.cube.add(bottomFrontRightCorner),self.cube.add(bottomBackRightCorner),self.cube.add(bottomBackLeftCorner),self.compass=new THREE.Object3D;var circle=self.makeCompass("compass",0,0,-55,90,64,self.COMPASS_COLOR,self.COMPASS_OPACITY);self.compass.add(circle),self.scene.add(self.cube),self.scene.add(self.compass)},Viewcube.prototype.setupLights=function(){var ambientLight=new THREE.AmbientLight(3684408);this.scene.add(ambientLight);var spotLight=new THREE.SpotLight(16777215);spotLight.position.set(100,140,130),spotLight.intensity=2,this.scene.add(spotLight)},Viewcube.prototype.setupNavigation=function(){},Viewcube.prototype.setupSelection=function(){var self=this;self.domElement.addEventListener("mousemove",self.onMouseMove.bind(self),!1),self.domElement.addEventListener("mouseover",self.onMouseOver.bind(self),!1),self.domElement.addEventListener("mouseup",self.onMouseUp.bind(self),!1)},Viewcube.prototype.setView=function(view){var self=this;switch(view){case self.FACES.TOP:self.tweenCameraToPosition(0,0,self.OFFSET);break;case self.FACES.FRONT:self.tweenCameraToPosition(self.OFFSET,0,0);break;case self.FACES.LEFT:self.tweenCameraToPosition(0,0,self.OFFSET);break;case self.FACES.RIGHT:self.tweenCameraToPosition(self.OFFSET,0,0);break;case self.FACES.BACK:self.tweenCameraToPosition(-self.OFFSET,0,0);break;case self.FACES.BOTTOM:self.tweenCameraToPosition(0,0,-self.OFFSET);break;case self.FACES.TOP_FRONT_EDGE:self.tweenCameraToPosition(0,0,self.OFFSET,0);break;case self.FACES.TOP_BACK_EDGE:console.log(view);break;case self.FACES.TOP_RIGHT_EDGE:console.log(view);break;case self.FACES.TOP_LEFT_EDGE:console.log(view);break;default:console.dir(view)}},Viewcube.prototype.tweenCameraToPosition=function(x,y,z,rx,ry,rz){var self=this;return new Promise(function(resolve){var start={x:self.camera.position.x,y:self.camera.position.y,z:self.camera.position.z},finish={x:x,y:y,z:z},tween=new TWEEN.Tween(start).to(finish,2e3);tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(resolve),tween.onUpdate(function(){self.camera.lookAt(new THREE.Vector3(0,0,0)),self.camera.position.set(this.x,this.y,this.z)}),tween.start(),self.render()})},Viewcube.prototype.tweenControlRotation=function(rx,ry,rz){var self=this;return new Promise(function(resolve){var start={rx:self.control.rotation.x,ry:self.control.rotation.y,rz:self.control.rotation.z},finish={rx:rx,ry:ry,rz:rz},tween=new TWEEN.Tween(start).to(finish,1e3);tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(resolve),tween.onUpdate(function(){self.control.rotation.set(this.rx,this.ry,this.rz,"XYZ");
}),tween.start(),self.render()})},Viewcube.prototype.update=function(){TWEEN.update()},Viewcube}();var FOUR=FOUR||{};FOUR.Viewport3D=function(){function Viewport3D(domElement,scene,camera){THREE.EventDispatcher.call(this),this.backgroundColor=new THREE.Color(0,1),this.camera=camera,this.clock=new THREE.Clock,this.continuousUpdate=!1,this.controller=null,this.controllers={},this.domElement=domElement,this.renderer=null,this.scene=scene||new THREE.Scene}return Viewport3D.prototype=Object.create(THREE.EventDispatcher.prototype),Viewport3D.prototype.constructor=Viewport3D,Viewport3D.prototype.addController=function(controller,name){this.controllers[name]=controller},Viewport3D.prototype.getCamera=function(){return this.camera},Viewport3D.prototype.getScene=function(){return this.scene},Viewport3D.prototype.handleResize=function(){var self=this,height=self.domElement.clientHeight,width=self.domElement.clientWidth;self.camera.aspect=width/height,self.camera.updateProjectionMatrix(),self.renderer.setSize(width,height),self.render()},Viewport3D.prototype.init=function(){var self=this;self.renderer=new THREE.WebGLRenderer({antialias:!0}),self.renderer.setClearColor(self.backgroundColor),self.renderer.setSize(self.domElement.clientWidth,self.domElement.clientHeight),self.renderer.shadowMap.enabled=!0,self.domElement.appendChild(self.renderer.domElement),window.addEventListener("resize",self.handleResize.bind(self),!1),self.scene.addEventListener("update",self.render.bind(self),!1),self.render(),self.update()},Viewport3D.prototype.render=function(){var self=this;self.renderer.render(self.scene,self.camera)},Viewport3D.prototype.setBackgroundColor=function(color){var self=this;self.background=color,self.renderer.setClearColor(self.backgroundColor),self.render()},Viewport3D.prototype.setCamera=function(name){var i,obj,found=!1,self=this;if(typeof self.scene===FOUR.Scene)self.camera=self.scene.getCamera(name);else{for(i=0;i<self.scene.children&&!found;i++)obj=self.scene.children[i],typeof obj===THREE.Camera&&obj.name===name&&(self.camera=obj,found=!0);found||console.error('Camera "'+name+'" not found')}self.render()},Viewport3D.prototype.setMode=function(mode){var self=this;self.mode&&self.controller&&self.controller.disable(),console.info("set viewport mode to "+mode),self.mode=mode,self.controller=self.controllers[self.mode],self.controller.enable()},Viewport3D.prototype.update=function(){var self=this;if(requestAnimationFrame(self.update.bind(self)),TWEEN.update(),self.controller){var delta=self.clock.getDelta();self.controller.update(delta)}},Viewport3D}();var FOUR=FOUR||{};FOUR.FirstPersonController=function(){function OrbitConstraint(camera){this.camera=camera,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-(1/0),this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25;var theta,phi,scope=this,EPS=1e-6,phiDelta=0,thetaDelta=0,scale=1,panOffset=new THREE.Vector3,zoomChanged=!1,offset=new THREE.Vector3,quat=(new THREE.Quaternion).setFromUnitVectors(camera.up,new THREE.Vector3(0,1,0)),quatInverse=quat.clone().inverse(),lastPosition=new THREE.Vector3,lastQuaternion=new THREE.Quaternion;this.dollyIn=function(dollyScale){scope.camera instanceof THREE.PerspectiveCamera?scale/=dollyScale:scope.camera instanceof THREE.OrthographicCamera?(scope.camera.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.camera.zoom*dollyScale)),scope.camera.updateProjectionMatrix(),zoomChanged=!0):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.dollyOut=function(dollyScale){scope.camera instanceof THREE.PerspectiveCamera?scale*=dollyScale:scope.camera instanceof THREE.OrthographicCamera?(scope.camera.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.camera.zoom/dollyScale)),scope.camera.updateProjectionMatrix(),zoomChanged=!0):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.getPolarAngle=function(){return phi},this.getAzimuthalAngle=function(){return theta},this.rotateLeft=function(angle){thetaDelta-=angle},this.rotateUp=function(angle){phiDelta-=angle},this.panLeft=function(){var v=new THREE.Vector3;return function(distance){var te=this.camera.matrix.elements;v.set(te[0],te[1],te[2]),v.multiplyScalar(-distance),panOffset.add(v)}}(),this.panUp=function(){var v=new THREE.Vector3;return function(distance){var te=this.camera.matrix.elements;v.set(te[4],te[5],te[6]),v.multiplyScalar(distance),panOffset.add(v)}}(),this.pan=function(deltaX,deltaY,screenWidth,screenHeight){if(scope.camera instanceof THREE.PerspectiveCamera){var position=scope.camera.position,offset=position.clone().sub(scope.target),targetDistance=offset.length();targetDistance*=Math.tan(scope.camera.fov/2*Math.PI/180),scope.panLeft(2*deltaX*targetDistance/screenHeight),scope.panUp(2*deltaY*targetDistance/screenHeight)}else scope.camera instanceof THREE.OrthographicCamera?(scope.panLeft(deltaX*(scope.camera.right-scope.camera.left)/screenWidth),scope.panUp(deltaY*(scope.camera.top-scope.camera.bottom)/screenHeight)):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")},this.sync=function(){this.target=new THREE.Vector3(0,0,-1),this.target.applyMatrix4(camera.matrixWorld)},this.update=function(){var position=this.camera.position;offset.copy(position).sub(this.target),offset.applyQuaternion(quat),theta=Math.atan2(offset.x,offset.z),phi=Math.atan2(Math.sqrt(offset.x*offset.x+offset.z*offset.z),offset.y),theta+=thetaDelta,phi+=phiDelta,theta=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,theta)),phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,phi)),phi=Math.max(EPS,Math.min(Math.PI-EPS,phi));var radius=offset.length()*scale;return radius=Math.max(this.minDistance,Math.min(this.maxDistance,radius)),this.target.add(panOffset),offset.x=radius*Math.sin(phi)*Math.sin(theta),offset.y=radius*Math.cos(phi),offset.z=radius*Math.sin(phi)*Math.cos(theta),offset.applyQuaternion(quatInverse),position.copy(this.target).add(offset),this.camera.lookAt(this.target),this.enableDamping===!0?(thetaDelta*=1-this.dampingFactor,phiDelta*=1-this.dampingFactor):(thetaDelta=0,phiDelta=0),scale=1,panOffset.set(0,0,0),zoomChanged||lastPosition.distanceToSquared(this.camera.position)>EPS||8*(1-lastQuaternion.dot(this.camera.quaternion))>EPS?(lastPosition.copy(this.camera.position),lastQuaternion.copy(this.camera.quaternion),zoomChanged=!1,!0):!1}}function FirstPersonController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EVENT={CHANGE:{type:"change"},END:{type:"end"},START:{type:"start"}},self.KEYS={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},self.STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},self.WALK_HEIGHT=2,self.autoRotate=!1,self.autoRotateSpeed=2,self.camera=config.camera||config.viewport.camera,self.constraint=new OrbitConstraint(self.camera),self.dollyDelta=new THREE.Vector2,self.dollyEnd=new THREE.Vector2,self.dollyStart=new THREE.Vector2,self.domElement=config.domElement||config.viewport.domElement,self.enabled=!1,self.enableKeys=!0,self.enablePan=!0,self.enableRotate=!0,self.enableZoom=!0,self.keyPanSpeed=7,self.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},self.listeners={},self.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT},self.panStart=new THREE.Vector2,self.panEnd=new THREE.Vector2,self.panDelta=new THREE.Vector2,self.rotateDelta=new THREE.Vector2,self.rotateEnd=new THREE.Vector2,self.rotateSpeed=1,self.rotateStart=new THREE.Vector2,self.state=self.STATE.NONE,self.viewport=config.viewport,self.zoomSpeed=1,self.target0=self.target.clone(),self.position0=self.camera.position.clone(),self.zoom0=self.camera.zoom,Object.keys(config).forEach(function(key){self[key]=config[key]})}return FirstPersonController.prototype=Object.create(THREE.EventDispatcher.prototype),FirstPersonController.prototype.constructor=FirstPersonController,FirstPersonController.prototype.contextmenu=function(event){event.preventDefault()},FirstPersonController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},FirstPersonController.prototype.emit=function(event){this.dispatchEvent({type:event||"update"})},FirstPersonController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"contextmenu",self.contextmenu),addListener(self.domElement,"mousedown",self.onMouseDown),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseup",self.onMouseUp),addListener(self.domElement,"mousewheel",self.onMouseWheel),addListener(self.domElement,"DOMMouseScroll",self.onMouseWheel),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.constraint.sync(),self.enabled=!0},FirstPersonController.prototype.getAutoRotationAngle=function(){var self=this;return 2*Math.PI/60/60*self.autoRotateSpeed},FirstPersonController.prototype.getAzimuthalAngle=function(){return this.constraint.getAzimuthalAngle()},FirstPersonController.prototype.getPolarAngle=function(){return this.constraint.getPolarAngle()},FirstPersonController.prototype.getWalkHeight=function(position){return 0},FirstPersonController.prototype.getZoomScale=function(){var self=this;return Math.pow(.95,self.zoomSpeed)},FirstPersonController.prototype.handleDoubleClick=function(selected){var self=this;self.modifiers[self.KEY.CTRL]?self.dispatchEvent({type:"lookat",position:selected.point,object:selected.object}):self.dispatchEvent({type:"navigate",position:selected.point,object:selected.object})},FirstPersonController.prototype.handleSingleClick=function(){},FirstPersonController.prototype.onKeyDown=function(event){var self=this;if(self.enabled)switch(event.keyCode){case self.KEY.CTRL:self.modifiers[self.KEY.CTRL]=!0;break;case self.KEY.MOVE_TO_EYE_HEIGHT:self.setWalkHeight();break;case self.KEY.MOVE_FORWARD:self.move.forward=!0;break;case self.KEY.MOVE_BACK:self.move.backward=!0;break;case self.KEY.MOVE_LEFT:self.move.left=!0;break;case self.KEY.MOVE_RIGHT:self.move.right=!0;break;case self.KEY.MOVE_UP:self.move.up=!0;break;case self.KEY.MOVE_DOWN:self.move.down=!0}},FirstPersonController.prototype.onKeyUp=function(event){var self=this;switch(event.keyCode){case self.KEY.CTRL:self.modifiers[self.KEY.CTRL]=!1;break;case self.KEY.MOVE_FORWARD:self.move.forward=!1;break;case self.KEY.MOVE_BACK:self.move.backward=!1;break;case self.KEY.MOVE_LEFT:self.move.left=!1;break;case self.KEY.MOVE_RIGHT:self.move.right=!1;break;case self.KEY.MOVE_UP:self.move.up=!1;break;case self.KEY.MOVE_DOWN:self.move.down=!1;break;case self.KEY.CANCEL:Object.keys(self.move).forEach(function(key){self.move[key]=!1}),self.lookChange=!1}},FirstPersonController.prototype.onMouseDown=function(event){var self=this;if(self.enabled!==!1){if(event.preventDefault(),event.button===self.mouseButtons.ORBIT){if(self.enableRotate===!1)return;self.state=self.STATE.ROTATE,self.rotateStart.set(event.clientX,event.clientY)}else if(event.button===self.mouseButtons.ZOOM){if(self.enableZoom===!1)return;self.state=self.STATE.DOLLY,self.dollyStart.set(event.clientX,event.clientY)}else if(event.button===self.mouseButtons.PAN){if(self.enablePan===!1)return;self.state=self.STATE.PAN,self.panStart.set(event.clientX,event.clientY)}self.state!==self.STATE.NONE&&self.dispatchEvent(self.EVENT.START)}},FirstPersonController.prototype.onMouseMove=function(event){var self=this;if(self.enabled!==!1){event.preventDefault();var element=self.domElement;if(self.state===self.STATE.ROTATE){if(self.enableRotate===!1)return;self.rotateEnd.set(event.clientX,event.clientY),self.rotateDelta.subVectors(self.rotateEnd,self.rotateStart),self.constraint.rotateLeft(2*Math.PI*self.rotateDelta.x/element.clientWidth*self.rotateSpeed),self.constraint.rotateUp(2*Math.PI*self.rotateDelta.y/element.clientHeight*self.rotateSpeed),self.rotateStart.copy(self.rotateEnd)}else if(self.state===self.STATE.DOLLY){if(self.enableZoom===!1)return;self.dollyEnd.set(event.clientX,event.clientY),self.dollyDelta.subVectors(self.dollyEnd,self.dollyStart),self.dollyDelta.y>0?self.constraint.dollyIn(self.getZoomScale()):self.dollyDelta.y<0&&self.constraint.dollyOut(self.getZoomScale()),self.dollyStart.copy(self.dollyEnd)}else if(self.state===self.STATE.PAN){if(self.enablePan===!1)return;self.panEnd.set(event.clientX,event.clientY),self.panDelta.subVectors(self.panEnd,self.panStart),self.pan(self.panDelta.x,self.panDelta.y),self.panStart.copy(self.panEnd)}self.state!==self.STATE.NONE&&self.update()}},FirstPersonController.prototype.onMouseUp=function(event){var self=this;self.enabled!==!1&&(self.dispatchEvent(self.EVENT.END),self.state=self.STATE.NONE)},FirstPersonController.prototype.onMouseWheel=function(event){var self=this;if(self.enabled!==!1&&self.enableZoom!==!1&&self.state===self.STATE.NONE){event.preventDefault(),event.stopPropagation();var delta=0;void 0!==event.wheelDelta?delta=event.wheelDelta:void 0!==event.detail&&(delta=-event.detail),delta>0?self.constraint.dollyOut(self.getZoomScale()):0>delta&&self.constraint.dollyIn(self.getZoomScale()),self.update(),self.dispatchEvent(self.EVENT.START),self.dispatchEvent(self.EVENT.END)}},FirstPersonController.prototype.onWindowResize=function(){console.warn("Not implemented")},FirstPersonController.prototype.pan=function(deltaX,deltaY){var self=this,element=self.domElement===document?self.domElement.body:self.domElement;self.constraint.pan(deltaX,deltaY,element.clientWidth,element.clientHeight)},FirstPersonController.prototype.reset=function(){var self=this;self.state=self.STATE.NONE,self.target.copy(self.target0),self.camera.position.copy(self.position0),self.camera.zoom=self.zoom0,self.camera.updateProjectionMatrix(),self.dispatchEvent(self.EVENT.CHANGE),self.update()},FirstPersonController.prototype.setWalkHeight=function(){var self=this;return self.viewport.camera.resetOrientation(self.emit.bind(self)).then(function(){self.camera.setPositionAndTarget(self.camera.position.x,self.camera.position.y,self.WALK_HEIGHT,self.camera.target.x,self.camera.target.y,self.WALK_HEIGHT)})},FirstPersonController.prototype.update=function(delta){var self=this;if(self.enabled){self.autoRotate&&self.state===self.STATE.NONE&&self.constraint.rotateLeft(self.getAutoRotationAngle());var change=!1,distance=delta*self.movementSpeed;self.move.forward&&(self.camera.translateZ(-distance),change=!0),self.move.backward&&(self.camera.translateZ(distance),change=!0),self.move.right&&(self.camera.translateX(distance),change=!0),self.move.left&&(self.camera.translateX(-distance),change=!0),self.move.up&&(self.camera.translateY(-distance),change=!0),self.move.down&&(self.camera.translateY(distance),change=!0),(self.constraint.update()===!0||change===!0)&&self.dispatchEvent(self.EVENT.CHANGE)}},Object.defineProperties(FirstPersonController.prototype,{dampingFactor:{get:function(){return this.constraint.dampingFactor},set:function(value){this.constraint.dampingFactor=value}},enableDamping:{get:function(){return this.constraint.enableDamping},set:function(value){this.constraint.enableDamping=value}},maxAzimuthAngle:{get:function(){return this.constraint.maxAzimuthAngle},set:function(value){this.constraint.maxAzimuthAngle=value}},maxDistance:{get:function(){return this.constraint.maxDistance},set:function(value){this.constraint.maxDistance=value}},maxPolarAngle:{get:function(){return this.constraint.maxPolarAngle},set:function(value){this.constraint.maxPolarAngle=value}},maxZoom:{get:function(){return this.constraint.maxZoom},set:function(value){this.constraint.maxZoom=value}},minAzimuthAngle:{get:function(){return this.constraint.minAzimuthAngle},set:function(value){this.constraint.minAzimuthAngle=value}},minDistance:{get:function(){return this.constraint.minDistance},set:function(value){this.constraint.minDistance=value}},minPolarAngle:{get:function(){return this.constraint.minPolarAngle},set:function(value){this.constraint.minPolarAngle=value}},minZoom:{get:function(){return this.constraint.minZoom},set:function(value){this.constraint.minZoom=value}}}),FirstPersonController}();var FOUR=FOUR||{};FOUR.MultiController=function(){function MultiController(viewport,domElement){THREE.EventDispatcher.call(this);var self=this;self.EVENTS={CHANGE:{type:"change"},END:{type:"end"},START:{type:"start"}},self.KEY={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4,TRANSLATE:5,CANCEL:27,MOVE_FORWARD:73,MOVE_LEFT:74,MOVE_BACK:75,MOVE_RIGHT:76,MOVE_UP:85,MOVE_DOWN:79,ROTATE_LEFT:-1,ROTATE_RIGHT:-1},self.controller=null,self.controllers={},self.domElement=domElement,self.viewport=viewport}return MultiController.prototype=Object.create(THREE.EventDispatcher.prototype),MultiController.prototype.constructor=MultiController,MultiController.prototype.init=function(){var self=this;self.controllers.orbit=new FOUR.OrbitController,self.controllers.trackball=new FOUR.TrackballController,self.controllers.walk=new FOUR.WalkController},MultiController.prototype.setMode=function(mode){var self=this;self.dispatchEvent({type:"change"})},MultiController}();var FOUR=FOUR||{};FOUR.OrbitController=function(){function OrbitConstraint(camera){this.camera=camera,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-(1/0),this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25;var theta,phi,scope=this,EPS=1e-6,phiDelta=0,thetaDelta=0,scale=1,panOffset=new THREE.Vector3,zoomChanged=!1,offset=new THREE.Vector3,quat=(new THREE.Quaternion).setFromUnitVectors(camera.up,new THREE.Vector3(0,1,0)),quatInverse=quat.clone().inverse(),lastPosition=new THREE.Vector3,lastQuaternion=new THREE.Quaternion;this.dollyIn=function(dollyScale){scope.camera instanceof THREE.PerspectiveCamera?scale/=dollyScale:scope.camera instanceof THREE.OrthographicCamera?(scope.camera.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.camera.zoom*dollyScale)),scope.camera.updateProjectionMatrix(),zoomChanged=!0):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.dollyOut=function(dollyScale){scope.camera instanceof THREE.PerspectiveCamera?scale*=dollyScale:scope.camera instanceof THREE.OrthographicCamera?(scope.camera.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.camera.zoom/dollyScale)),scope.camera.updateProjectionMatrix(),zoomChanged=!0):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.getPolarAngle=function(){return phi},this.getAzimuthalAngle=function(){return theta},this.rotateLeft=function(angle){thetaDelta-=angle},this.rotateUp=function(angle){phiDelta-=angle},this.panLeft=function(){var v=new THREE.Vector3;return function(distance){var te=this.camera.matrix.elements;v.set(te[0],te[1],te[2]),v.multiplyScalar(-distance),panOffset.add(v)}}(),this.panUp=function(){var v=new THREE.Vector3;return function(distance){var te=this.camera.matrix.elements;v.set(te[4],te[5],te[6]),v.multiplyScalar(distance),panOffset.add(v)}}(),this.pan=function(deltaX,deltaY,screenWidth,screenHeight){if(scope.camera instanceof THREE.PerspectiveCamera){var position=scope.camera.position,offset=position.clone().sub(scope.target),targetDistance=offset.length();targetDistance*=Math.tan(scope.camera.fov/2*Math.PI/180),scope.panLeft(2*deltaX*targetDistance/screenHeight),scope.panUp(2*deltaY*targetDistance/screenHeight)}else scope.camera instanceof THREE.OrthographicCamera?(scope.panLeft(deltaX*(scope.camera.right-scope.camera.left)/screenWidth),scope.panUp(deltaY*(scope.camera.top-scope.camera.bottom)/screenHeight)):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")},this.sync=function(){this.target=new THREE.Vector3(0,0,-1),this.target.applyMatrix4(camera.matrixWorld)},this.update=function(){var position=this.camera.position;offset.copy(position).sub(this.target),offset.applyQuaternion(quat),theta=Math.atan2(offset.x,offset.z),phi=Math.atan2(Math.sqrt(offset.x*offset.x+offset.z*offset.z),offset.y),theta+=thetaDelta,phi+=phiDelta,theta=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,theta)),phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,phi)),phi=Math.max(EPS,Math.min(Math.PI-EPS,phi));var radius=offset.length()*scale;return radius=Math.max(this.minDistance,Math.min(this.maxDistance,radius)),this.target.add(panOffset),offset.x=radius*Math.sin(phi)*Math.sin(theta),offset.y=radius*Math.cos(phi),offset.z=radius*Math.sin(phi)*Math.cos(theta),offset.applyQuaternion(quatInverse),position.copy(this.target).add(offset),this.camera.lookAt(this.target),this.enableDamping===!0?(thetaDelta*=1-this.dampingFactor,phiDelta*=1-this.dampingFactor):(thetaDelta=0,phiDelta=0),scale=1,panOffset.set(0,0,0),zoomChanged||lastPosition.distanceToSquared(this.camera.position)>EPS||8*(1-lastQuaternion.dot(this.camera.quaternion))>EPS?(lastPosition.copy(this.camera.position),lastQuaternion.copy(this.camera.quaternion),zoomChanged=!1,!0):!1}}function OrbitController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EVENT={CHANGE:{type:"change"},END:{type:"end"},START:{type:"start"}},self.KEYS={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},self.STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},self.autoRotate=!1,self.autoRotateSpeed=2,self.camera=config.camera||config.viewport.camera,self.constraint=new OrbitConstraint(self.camera),self.dollyDelta=new THREE.Vector2,self.dollyEnd=new THREE.Vector2,self.dollyStart=new THREE.Vector2,self.domElement=config.domElement||config.viewport.domElement,self.enabled=!1,self.enableKeys=!0,self.enablePan=!0,self.enableRotate=!0,self.enableZoom=!0,self.keyPanSpeed=7,self.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},self.listeners={},self.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT},self.panStart=new THREE.Vector2,self.panEnd=new THREE.Vector2,self.panDelta=new THREE.Vector2,self.rotateDelta=new THREE.Vector2,self.rotateEnd=new THREE.Vector2,self.rotateSpeed=1,self.rotateStart=new THREE.Vector2,self.state=self.STATE.NONE,self.viewport=config.viewport,self.zoomSpeed=1,self.target0=self.target.clone(),self.position0=self.camera.position.clone(),self.zoom0=self.camera.zoom}return OrbitController.prototype=Object.create(THREE.EventDispatcher.prototype),OrbitController.prototype.constructor=OrbitController,OrbitController.prototype.contextmenu=function(event){event.preventDefault()},OrbitController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},OrbitController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"contextmenu",self.contextmenu),addListener(self.domElement,"mousedown",self.onMouseDown),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseup",self.onMouseUp),addListener(self.domElement,"mousewheel",self.onMouseWheel),addListener(self.domElement,"DOMMouseScroll",self.onMouseWheel),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.constraint.sync(),self.enabled=!0},OrbitController.prototype.getAutoRotationAngle=function(){var self=this;return 2*Math.PI/60/60*self.autoRotateSpeed},OrbitController.prototype.getAzimuthalAngle=function(){return this.constraint.getAzimuthalAngle()},OrbitController.prototype.getPolarAngle=function(){return this.constraint.getPolarAngle()},OrbitController.prototype.getZoomScale=function(){var self=this;return Math.pow(.95,self.zoomSpeed)},OrbitController.prototype.onKeyDown=function(event){},OrbitController.prototype.onKeyUp=function(event){},OrbitController.prototype.onMouseDown=function(event){var self=this;if(self.enabled!==!1){if(event.preventDefault(),event.button===self.mouseButtons.ORBIT){if(self.enableRotate===!1)return;self.state=self.STATE.ROTATE,self.rotateStart.set(event.clientX,event.clientY)}else if(event.button===self.mouseButtons.ZOOM){if(self.enableZoom===!1)return;self.state=self.STATE.DOLLY,self.dollyStart.set(event.clientX,event.clientY)}else if(event.button===self.mouseButtons.PAN){if(self.enablePan===!1)return;self.state=self.STATE.PAN,self.panStart.set(event.clientX,event.clientY)}self.state!==self.STATE.NONE&&self.dispatchEvent(self.EVENT.START)}},OrbitController.prototype.onMouseMove=function(event){var self=this;if(self.enabled!==!1){event.preventDefault();var element=self.domElement;if(self.state===self.STATE.ROTATE){if(self.enableRotate===!1)return;self.rotateEnd.set(event.clientX,event.clientY),self.rotateDelta.subVectors(self.rotateEnd,self.rotateStart),self.constraint.rotateLeft(2*Math.PI*self.rotateDelta.x/element.clientWidth*self.rotateSpeed),self.constraint.rotateUp(2*Math.PI*self.rotateDelta.y/element.clientHeight*self.rotateSpeed),self.rotateStart.copy(self.rotateEnd)}else if(self.state===self.STATE.DOLLY){if(self.enableZoom===!1)return;self.dollyEnd.set(event.clientX,event.clientY),self.dollyDelta.subVectors(self.dollyEnd,self.dollyStart),self.dollyDelta.y>0?self.constraint.dollyIn(self.getZoomScale()):self.dollyDelta.y<0&&self.constraint.dollyOut(self.getZoomScale()),self.dollyStart.copy(self.dollyEnd)}else if(self.state===self.STATE.PAN){if(self.enablePan===!1)return;self.panEnd.set(event.clientX,event.clientY),self.panDelta.subVectors(self.panEnd,self.panStart),self.pan(self.panDelta.x,self.panDelta.y),self.panStart.copy(self.panEnd)}self.state!==self.STATE.NONE&&self.update()}},OrbitController.prototype.onMouseUp=function(event){var self=this;self.enabled!==!1&&(self.dispatchEvent(self.EVENT.END),self.state=self.STATE.NONE)},OrbitController.prototype.onMouseWheel=function(event){var self=this;if(self.enabled!==!1&&self.enableZoom!==!1&&self.state===self.STATE.NONE){event.preventDefault(),event.stopPropagation();var delta=0;void 0!==event.wheelDelta?delta=event.wheelDelta:void 0!==event.detail&&(delta=-event.detail),delta>0?self.constraint.dollyOut(self.getZoomScale()):0>delta&&self.constraint.dollyIn(self.getZoomScale()),self.update(),self.dispatchEvent(self.EVENT.START),self.dispatchEvent(self.EVENT.END)}},OrbitController.prototype.onWindowResize=function(){console.warn("Not implemented")},OrbitController.prototype.pan=function(deltaX,deltaY){var self=this,element=self.domElement===document?self.domElement.body:self.domElement;self.constraint.pan(deltaX,deltaY,element.clientWidth,element.clientHeight)},OrbitController.prototype.reset=function(){var self=this;self.state=self.STATE.NONE,self.target.copy(self.target0),self.camera.position.copy(self.position0),self.camera.zoom=self.zoom0,self.camera.updateProjectionMatrix(),self.dispatchEvent(self.EVENT.CHANGE),self.update()},OrbitController.prototype.update=function(){var self=this;self.autoRotate&&self.state===self.STATE.NONE&&self.constraint.rotateLeft(self.getAutoRotationAngle()),self.constraint.update()===!0&&self.dispatchEvent(self.EVENT.CHANGE)},Object.defineProperties(OrbitController.prototype,{target:{get:function(){return this.constraint.target},set:function(value){console.warn("THREE.OrbitControls: target is now immutable. Use target.set() instead."),this.constraint.target.copy(value)}},minDistance:{get:function(){return this.constraint.minDistance},set:function(value){this.constraint.minDistance=value}},maxDistance:{get:function(){return this.constraint.maxDistance},set:function(value){this.constraint.maxDistance=value}},minZoom:{get:function(){return this.constraint.minZoom},set:function(value){this.constraint.minZoom=value}},maxZoom:{get:function(){return this.constraint.maxZoom},set:function(value){this.constraint.maxZoom=value}},minPolarAngle:{get:function(){return this.constraint.minPolarAngle},set:function(value){this.constraint.minPolarAngle=value}},maxPolarAngle:{get:function(){return this.constraint.maxPolarAngle},set:function(value){this.constraint.maxPolarAngle=value}},minAzimuthAngle:{get:function(){return this.constraint.minAzimuthAngle},set:function(value){this.constraint.minAzimuthAngle=value}},maxAzimuthAngle:{get:function(){return this.constraint.maxAzimuthAngle},set:function(value){this.constraint.maxAzimuthAngle=value}},enableDamping:{get:function(){return this.constraint.enableDamping},set:function(value){this.constraint.enableDamping=value}},dampingFactor:{get:function(){return this.constraint.dampingFactor},set:function(value){this.constraint.dampingFactor=value}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(value){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!value}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(value){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!value}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(value){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!value}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(value){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!value}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.constraint.enableDamping},set:function(value){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.constraint.enableDamping=!value}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.constraint.dampingFactor},set:function(value){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.constraint.dampingFactor=value}}}),OrbitController}();var FOUR=FOUR||{};FOUR.SelectionController=function(){function SelectionController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.SINGLE_CLICK_TIMEOUT=500,self.KEY={ALT:18,CTRL:17,SHIFT:16},self.SELECTION_MODE={POINT:0,FACE:1,MESH:2,OBJECT:3,CAMERA:4,LIGHT:5},self.enabled=!1,self.listeners={},self.modifiers={},self.mouse=new THREE.Vector2,self.raycaster=new THREE.Raycaster,self.selection=config.selection,self.viewport=config.viewport,Object.keys(self.KEY).forEach(function(key){self.modifiers[self.KEY[key]]=!1})}return SelectionController.prototype=Object.create(THREE.EventDispatcher.prototype),SelectionController.prototype.count=function(){return this.selection.getObjects().length},SelectionController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},SelectionController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={
element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.selection,"update",self.update),addListener(self.viewport.domElement,"mousedown",self.onMouseDown),addListener(self.viewport.domElement,"mousemove",self.onMouseMove),addListener(self.viewport.domElement,"mouseover",self.onMouseOver),addListener(self.viewport.domElement,"mouseup",self.onMouseUp),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.enabled=!0},SelectionController.prototype.onKeyDown=function(event){var self=this;self.enabled&&(event.keyCode===self.KEY.ALT||event.keyCode===self.KEY.CTRL||event.keyCode===self.KEY.SHIFT)&&(self.modifiers[event.keyCode]=!0)},SelectionController.prototype.onKeyUp=function(event){var self=this;self.enabled&&(event.keyCode===self.KEY.ALT||event.keyCode===self.KEY.CTRL||event.keyCode===self.KEY.SHIFT)&&(self.modifiers[event.keyCode]=!1)},SelectionController.prototype.onMouseDown=function(event){},SelectionController.prototype.onMouseMove=function(event){},SelectionController.prototype.onMouseOver=function(event){},SelectionController.prototype.onMouseUp=function(event){event.preventDefault(),event.stopPropagation();var intersects,objs,self=this;self.enabled&&(self.mouse.x=event.offsetX/self.viewport.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetY/self.viewport.domElement.clientHeight)+1,self.raycaster.setFromCamera(self.mouse,self.viewport.camera),intersects=self.raycaster.intersectObjects(self.viewport.scene.model.children,!0),objs=intersects&&intersects.length>0?[intersects[0].object]:[],self.modifiers[self.KEY.SHIFT]===!0?self.selection.addAll(objs):self.modifiers[self.KEY.ALT]===!0?self.selection.removeAll(objs):self.selection.toggle(objs))},SelectionController.prototype.selectByFilter=function(filter){console.log("select by filter");var objs=[],self=this;self.viewport.scene.traverse(function(obj){filter(obj)&&objs.push(obj)}),self.selection.addAll(objs)},SelectionController.prototype.selectByMarquee=function(event){throw console.log("select by marquee"),new Error("not implemented")},SelectionController.prototype.update=function(){this.dispatchEvent({type:"update"})},SelectionController}();var FOUR=FOUR||{};FOUR.TourController=function(){function TourController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EVENTS={CHANGE:{type:"change"},END:{type:"end"},START:{type:"start"}},self.KEY={CANCEL:27,NEXT:190,PREVIOUS:188,NONE:-1,PLAN:-2,UPDATE:-3},self.PLANNING_STRATEGY={GENETIC_EVOLUTION:0,SIMULATED_ANNEALING:1},self.camera=config.viewport.camera,self.current=-1,self.domElement=config.viewport.domElement,self.enabled=!1,self.listeners={},self.offset=100,self.path=[],self.planner=new FOUR.PathPlanner,self.planningStrategy=self.PLANNING_STRATEGY.GENETIC_EVOLUTION,self.selection=config.selection,self.viewport=config.viewport}return TourController.prototype=Object.create(THREE.EventDispatcher.prototype),TourController.prototype.constructor=TourController,TourController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},TourController.prototype.distanceBetween=function(p1,p2){var dx=Math.abs(p2.x-p1.x),dy=Math.abs(p2.y-p1.y),dz=Math.abs(p2.z-p1.z);return Math.sqrt(dx*dx+dy*dy+dz*dz)},TourController.prototype.emit=function(type){this.dispatchEvent({type:type})},TourController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.selection,"update",self.plan),addListener(window,"keyup",self.onKeyUp),this.enabled=!0},TourController.prototype.getPath=function(){return this.path},TourController.prototype.navigate=function(i){var self=this,feature=self.path[i];self.camera.setTarget(feature.x,feature.y,feature.z)},TourController.prototype.nearest=function(p){var dist,nearest,self=this;return nearest=self.path.reduce(function(last,current,index){return dist=self.distanceBetween(p,current),dist<=last.dist&&(last={x:current.x,y:current.y,z:current.z,dist:dist,index:index}),last},{x:p.x,y:p.y,z:p.z,dist:1/0,index:-1})},TourController.prototype.next=function(){var self=this;if(-1===self.current){var nearest=self.nearest(self.camera.position);self.current=nearest.index}else self.current<self.path.length-1?self.current++:self.current=0;return self.navigate(self.current)},TourController.prototype.noop=function(){},TourController.prototype.onKeyDown=function(){},TourController.prototype.onKeyUp=function(){var self=this;if(self.enabled)switch(event.keyCode){case self.KEY.CANCEL:self.current=-1,self.path=[];break;case self.KEY.NEXT:self.next();break;case self.KEY.PREVIOUS:self.previous()}},TourController.prototype.plan=function(objs){var self=this;self.current=-1,self.path=[];var features=objs||self.selection.getObjects();return self.planner.generateTourSequence(features).then(function(path){self.path=path},function(err){console.error(err)})},TourController.prototype.previous=function(){var self=this;if(-1===self.current){var nearest=self.nearest(self.camera.position);self.current=nearest.index}else 0===self.current?self.current=self.path.length-1:self.current--;return self.navigate(self.current)},TourController.prototype.update=function(){},TourController}();var FOUR=FOUR||{};FOUR.TrackballController=function(){function TrackballController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EPS=1e-6,self.EVENTS={CHANGE:{type:"change"},END:{type:"end"},START:{type:"start"}},self.KEY={A:65,S:83,D:68,I:73,J:74,K:75,L:76,ALT:18,CTRL:17,SHIFT:16,CANCEL:27,GRAVE_ACCENT:192,MOVE_FORWARD:73,MOVE_LEFT:74,MOVE_BACK:75,MOVE_RIGHT:76,MOVE_UP:85,MOVE_DOWN:79},self.MODE={SELECTION:0,TRACKBALL:1,FIRSTPERSON:2,ORBIT:3},self.MOUSE_STATE={UP:0,DOWN:1},self.SINGLE_CLICK_TIMEOUT=400,self.allowZoom=!0,self.allowPan=!0,self.allowRotate=!0,self.camera=config.viewport.camera,self.domElement=config.viewport.domElement,self.dynamicDampingFactor=.2,self.enabled=!1,self.keys=[65,83,68,73,74,75,76],self.lastPosition=new THREE.Vector3,self.listeners={},self.maxDistance=1/0,self.minDistance=0,self.modifiers={},self.mouse=self.MOUSE_STATE.UP,self.mousePosition=new THREE.Vector2,self.panSpeed=.3,self.raycaster=new THREE.Raycaster,self.rotateSpeed=1,self.screen={left:0,top:0,width:0,height:0},self.staticMoving=!1,self.target=new THREE.Vector3,self.timeout=null,self.viewport=config.viewport,self.zoomSpeed=1.2,self.target0=self.target.clone(),self.position0=self.camera.position.clone(),self.up0=self.camera.up.clone(),Object.keys(self.KEY).forEach(function(key){self.modifiers[self.KEY[key]]=!1}),Object.keys(config).forEach(function(key){self[key]=config[key]})}var STATE={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},_state=STATE.NONE,_prevState=STATE.NONE,_eye=new THREE.Vector3,_movePrev=new THREE.Vector2,_moveCurr=new THREE.Vector2,_lastAxis=new THREE.Vector3,_lastAngle=0,_zoomStart=new THREE.Vector2,_zoomEnd=new THREE.Vector2,_touchZoomDistanceStart=0,_touchZoomDistanceEnd=0,_panStart=new THREE.Vector2,_panEnd=new THREE.Vector2;return TrackballController.prototype=Object.create(THREE.EventDispatcher.prototype),TrackballController.prototype.checkDistances=function(){var self=this;(self.allowZoom||self.allowPan)&&(_eye.lengthSq()>self.maxDistance*self.maxDistance&&(self.camera.position.addVectors(self.target,_eye.setLength(self.maxDistance)),_zoomStart.copy(_zoomEnd)),_eye.lengthSq()<self.minDistance*self.minDistance&&(self.camera.position.addVectors(self.target,_eye.setLength(self.minDistance)),_zoomStart.copy(_zoomEnd)))},TrackballController.prototype.contextMenu=function(event){event.preventDefault()},TrackballController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},TrackballController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;self.handleResize(),addListener(self.domElement,"contextmenu",self.contextMenu),addListener(self.domElement,"mousedown",self.mousedown),addListener(self.domElement,"mousemove",self.mousemove),addListener(self.domElement,"mouseup",self.mouseup),addListener(self.domElement,"mousewheel",self.mousewheel),addListener(self.domElement,"DOMMouseScroll",self.mousewheel),addListener(self.domElement,"touchstart",self.touchstart),addListener(self.domElement,"touchend",self.touchend),addListener(self.domElement,"touchmove",self.touchmove),addListener(window,"keydown",self.keydown),addListener(window,"keyup",self.keyup),self.enabled=!0},TrackballController.prototype.getMouseOnCircle=function(){var vector=new THREE.Vector2;return function(pageX,pageY){return vector.set((pageX-.5*this.screen.width-this.screen.left)/(.5*this.screen.width),(this.screen.height+2*(this.screen.top-pageY))/this.screen.width),vector}}(),TrackballController.prototype.getMouseOnScreen=function(){var vector=new THREE.Vector2;return function(pageX,pageY){return vector.set((pageX-this.screen.left)/this.screen.width,(pageY-this.screen.top)/this.screen.height),vector}}(),TrackballController.prototype.handleDoubleClick=function(selected){var self=this;self.modifiers[self.KEY.CTRL]?self.dispatchEvent({type:"lookat",position:selected.point,object:selected.object}):self.dispatchEvent({type:"navigate",position:selected.point,object:selected.object})},TrackballController.prototype.handleEvent=function(event){"function"==typeof this[event.type]&&this[event.type](event)},TrackballController.prototype.handleResize=function(){var self=this;if(self.domElement===document)self.screen.left=0,self.screen.top=0,self.screen.width=window.innerWidth,self.screen.height=window.innerHeight;else{var box=self.domElement.getBoundingClientRect(),d=self.domElement.ownerDocument.documentElement;self.screen.left=box.left+window.pageXOffset-d.clientLeft,self.screen.top=box.top+window.pageYOffset-d.clientTop,self.screen.width=box.width,self.screen.height=box.height}},TrackballController.prototype.handleSingleClick=function(){},TrackballController.prototype.keydown=function(event){var self=this;self.enabled!==!1&&_state===STATE.NONE&&(event.keyCode===self.keys[STATE.ROTATE]&&self.allowRotate?_state=STATE.ROTATE:event.keyCode===self.keys[STATE.ZOOM]&&self.allowZoom?_state=STATE.ZOOM:event.keyCode===self.keys[STATE.PAN]&&self.allowPan?_state=STATE.PAN:event.keyCode===self.KEY.CTRL&&(self.modifiers[self.KEY.CTRL]=!0),_prevState=_state)},TrackballController.prototype.keyup=function(event){var self=this;self.enabled!==!1&&(event.keyCode===self.KEY.CTRL?self.modifiers[self.KEY.CTRL]=!0:event.keyCode===self.KEY.GRAVE_ACCENT&&self.camera.resetOrientation(),_state=_prevState)},TrackballController.prototype.mousedown=function(event){event.preventDefault(),event.stopPropagation();var self=this;self.mouse=self.MOUSE_STATE.DOWN,self.enabled!==!1&&(_state===STATE.NONE&&(_state=event.button),_state===STATE.ROTATE&&self.allowRotate?(_moveCurr.copy(self.getMouseOnCircle(event.pageX,event.pageY)),_movePrev.copy(_moveCurr)):_state===STATE.ZOOM&&self.allowZoom?(_zoomStart.copy(self.getMouseOnScreen(event.pageX,event.pageY)),_zoomEnd.copy(_zoomStart)):_state===STATE.PAN&&self.allowPan&&(_panStart.copy(self.getMouseOnScreen(event.pageX,event.pageY)),_panEnd.copy(_panStart)),self.dispatchEvent(self.EVENTS.START))},TrackballController.prototype.mousemove=function(event){event.preventDefault(),event.stopPropagation();var self=this;self.enabled!==!1&&(_state===STATE.ROTATE&&self.allowRotate?(_movePrev.copy(_moveCurr),_moveCurr.copy(self.getMouseOnCircle(event.pageX,event.pageY))):_state===STATE.ZOOM&&self.allowZoom?_zoomEnd.copy(self.getMouseOnScreen(event.pageX,event.pageY)):_state===STATE.PAN&&self.allowPan&&_panEnd.copy(self.getMouseOnScreen(event.pageX,event.pageY)))},TrackballController.prototype.mouseup=function(event){event.preventDefault(),event.stopPropagation();var self=this;if(self.mouse=self.MOUSE_STATE.UP,_state=STATE.NONE,self.enabled!==!1)if(null!==self.timeout){clearTimeout(self.timeout),self.timeout=null,self.mousePosition.x=event.offsetX/self.viewport.domElement.clientWidth*2-1,self.mousePosition.y=2*-(event.offsetY/self.viewport.domElement.clientHeight)+1,self.raycaster.setFromCamera(self.mousePosition,self.camera);var intersects=self.raycaster.intersectObjects(self.viewport.scene.children,!0);intersects&&intersects.length>0&&self.handleDoubleClick(intersects[0])}else self.timeout=setTimeout(function(){self.timeout=null},self.SINGLE_CLICK_TIMEOUT),self.dispatchEvent(self.EVENTS.END)},TrackballController.prototype.mousewheel=function(event){var self=this;if(self.enabled!==!1){event.preventDefault(),event.stopPropagation();var delta=0;event.wheelDelta?delta=event.wheelDelta/40:event.detail&&(delta=-event.detail/3),_zoomStart.y+=.01*delta,self.dispatchEvent(self.EVENTS.START),self.dispatchEvent(self.EVENTS.END)}},TrackballController.prototype.panCamera=function(){var mouseChange=new THREE.Vector2,cameraUp=new THREE.Vector3,pan=new THREE.Vector3;return function(){var self=this;mouseChange.copy(_panEnd).sub(_panStart),mouseChange.lengthSq()&&(mouseChange.multiplyScalar(_eye.length()*self.panSpeed),pan.copy(_eye).cross(self.camera.up).setLength(mouseChange.x),pan.add(cameraUp.copy(self.camera.up).setLength(mouseChange.y)),self.camera.position.add(pan),self.target.add(pan),self.staticMoving?_panStart.copy(_panEnd):_panStart.add(mouseChange.subVectors(_panEnd,_panStart).multiplyScalar(self.dynamicDampingFactor)))}}(),TrackballController.prototype.reset=function(){var self=this;_state=STATE.NONE,_prevState=STATE.NONE,self.target.copy(self.target0),self.camera.position.copy(self.position0),self.camera.up.copy(self.up0),_eye.subVectors(self.camera.position,self.target),self.camera.lookAt(self.target),self.dispatchEvent(self.EVENTS.CHANGE),self.lastPosition.copy(self.camera.position)},TrackballController.prototype.rotateCamera=function(){var angle,axis=new THREE.Vector3,quaternion=new THREE.Quaternion,eyeDirection=new THREE.Vector3,cameraUpDirection=new THREE.Vector3,cameraSidewaysDirection=new THREE.Vector3,moveDirection=new THREE.Vector3;return function(){var self=this;moveDirection.set(_moveCurr.x-_movePrev.x,_moveCurr.y-_movePrev.y,0),angle=moveDirection.length(),angle?(_eye.copy(self.camera.position).sub(self.target),eyeDirection.copy(_eye).normalize(),cameraUpDirection.copy(self.camera.up).normalize(),cameraSidewaysDirection.crossVectors(cameraUpDirection,eyeDirection).normalize(),cameraUpDirection.setLength(_moveCurr.y-_movePrev.y),cameraSidewaysDirection.setLength(_moveCurr.x-_movePrev.x),moveDirection.copy(cameraUpDirection.add(cameraSidewaysDirection)),axis.crossVectors(moveDirection,_eye).normalize(),angle*=self.rotateSpeed,quaternion.setFromAxisAngle(axis,angle),_eye.applyQuaternion(quaternion),self.camera.up.applyQuaternion(quaternion),_lastAxis.copy(axis),_lastAngle=angle):!self.staticMoving&&_lastAngle&&(_lastAngle*=Math.sqrt(1-self.dynamicDampingFactor),_eye.copy(self.camera.position).sub(self.target),quaternion.setFromAxisAngle(_lastAxis,_lastAngle),_eye.applyQuaternion(quaternion),self.camera.up.applyQuaternion(quaternion)),_movePrev.copy(_moveCurr)}}(),TrackballController.prototype.touchstart=function(event){var self=this;if(self.enabled!==!1){switch(event.touches.length){case 1:_state=STATE.TOUCH_ROTATE,_moveCurr.copy(self.getMouseOnCircle(event.touches[0].pageX,event.touches[0].pageY)),_movePrev.copy(_moveCurr);break;case 2:_state=STATE.TOUCH_ZOOM_PAN;var dx=event.touches[0].pageX-event.touches[1].pageX,dy=event.touches[0].pageY-event.touches[1].pageY;_touchZoomDistanceEnd=_touchZoomDistanceStart=Math.sqrt(dx*dx+dy*dy);var x=(event.touches[0].pageX+event.touches[1].pageX)/2,y=(event.touches[0].pageY+event.touches[1].pageY)/2;_panStart.copy(self.getMouseOnScreen(x,y)),_panEnd.copy(_panStart);break;default:_state=STATE.NONE}self.dispatchEvent(self.EVENTS.START)}},TrackballController.prototype.touchmove=function(event){var self=this;if(self.enabled!==!1)switch(event.preventDefault(),event.stopPropagation(),event.touches.length){case 1:_movePrev.copy(_moveCurr),_moveCurr.copy(self.getMouseOnCircle(event.touches[0].pageX,event.touches[0].pageY));break;case 2:var dx=event.touches[0].pageX-event.touches[1].pageX,dy=event.touches[0].pageY-event.touches[1].pageY;_touchZoomDistanceEnd=Math.sqrt(dx*dx+dy*dy);var x=(event.touches[0].pageX+event.touches[1].pageX)/2,y=(event.touches[0].pageY+event.touches[1].pageY)/2;_panEnd.copy(self.getMouseOnScreen(x,y));break;default:_state=STATE.NONE}},TrackballController.prototype.touchend=function(event){var self=this;if(self.enabled!==!1){switch(event.touches.length){case 1:_movePrev.copy(_moveCurr),_moveCurr.copy(self.getMouseOnCircle(event.touches[0].pageX,event.touches[0].pageY));break;case 2:_touchZoomDistanceStart=_touchZoomDistanceEnd=0;var x=(event.touches[0].pageX+event.touches[1].pageX)/2,y=(event.touches[0].pageY+event.touches[1].pageY)/2;_panEnd.copy(self.getMouseOnScreen(x,y)),_panStart.copy(_panEnd)}_state=STATE.NONE,self.dispatchEvent(self.EVENTS.END)}},TrackballController.prototype.update=function(){var self=this;_eye.subVectors(self.camera.position,self.target),self.allowRotate&&self.rotateCamera(),self.allowZoom&&self.zoomCamera(),self.allowPan&&self.panCamera(),self.camera.position.addVectors(self.target,_eye),self.checkDistances(),self.camera.lookAt(self.target),self.lastPosition.distanceToSquared(self.camera.position)>self.EPS&&(self.dispatchEvent(self.EVENTS.CHANGE),self.lastPosition.copy(self.camera.position))},TrackballController.prototype.zoomCamera=function(){var factor,self=this;_state===STATE.TOUCH_ZOOM_PAN?(factor=_touchZoomDistanceStart/_touchZoomDistanceEnd,_touchZoomDistanceStart=_touchZoomDistanceEnd,_eye.multiplyScalar(factor)):(factor=1+(_zoomEnd.y-_zoomStart.y)*self.zoomSpeed,1!==factor&&factor>0&&(_eye.multiplyScalar(factor),self.staticMoving?_zoomStart.copy(_zoomEnd):_zoomStart.y+=(_zoomEnd.y-_zoomStart.y)*this.dynamicDampingFactor))},TrackballController}(),function(){var GizmoMaterial=function(parameters){THREE.MeshBasicMaterial.call(this),this.depthTest=!1,this.depthWrite=!1,this.side=THREE.FrontSide,this.transparent=!0,this.setValues(parameters),this.oldColor=this.color.clone(),this.oldOpacity=this.opacity,this.highlight=function(highlighted){highlighted?(this.color.setRGB(1,1,0),this.opacity=1):(this.color.copy(this.oldColor),this.opacity=this.oldOpacity)}};GizmoMaterial.prototype=Object.create(THREE.MeshBasicMaterial.prototype),GizmoMaterial.prototype.constructor=GizmoMaterial;var GizmoLineMaterial=function(parameters){THREE.LineBasicMaterial.call(this),this.depthTest=!1,this.depthWrite=!1,this.transparent=!0,this.linewidth=1,this.setValues(parameters),this.oldColor=this.color.clone(),this.oldOpacity=this.opacity,this.highlight=function(highlighted){highlighted?(this.color.setRGB(1,1,0),this.opacity=1):(this.color.copy(this.oldColor),this.opacity=this.oldOpacity)}};GizmoLineMaterial.prototype=Object.create(THREE.LineBasicMaterial.prototype),GizmoLineMaterial.prototype.constructor=GizmoLineMaterial;var pickerMaterial=new GizmoMaterial({visible:!1,transparent:!1});THREE.TransformGizmo=function(){this.init=function(){THREE.Object3D.call(this),this.handles=new THREE.Object3D,this.pickers=new THREE.Object3D,this.planes=new THREE.Object3D,this.add(this.handles),this.add(this.pickers),this.add(this.planes);var planeGeometry=new THREE.PlaneBufferGeometry(50,50,2,2),planeMaterial=new THREE.MeshBasicMaterial({visible:!1,side:THREE.DoubleSide}),planes={XY:new THREE.Mesh(planeGeometry,planeMaterial),YZ:new THREE.Mesh(planeGeometry,planeMaterial),XZ:new THREE.Mesh(planeGeometry,planeMaterial),XYZE:new THREE.Mesh(planeGeometry,planeMaterial)};this.activePlane=planes.XYZE,planes.YZ.rotation.set(0,Math.PI/2,0),planes.XZ.rotation.set(-Math.PI/2,0,0);for(var i in planes)planes[i].name=i,this.planes.add(planes[i]),this.planes[i]=planes[i];var setupGizmos=function(gizmoMap,parent){for(var name in gizmoMap)for(i=gizmoMap[name].length;i--;){var object=gizmoMap[name][i][0],position=gizmoMap[name][i][1],rotation=gizmoMap[name][i][2];object.name=name,position&&object.position.set(position[0],position[1],position[2]),rotation&&object.rotation.set(rotation[0],rotation[1],rotation[2]),parent.add(object)}};setupGizmos(this.handleGizmos,this.handles),setupGizmos(this.pickerGizmos,this.pickers),this.traverse(function(child){if(child instanceof THREE.Mesh){child.updateMatrix();var tempGeometry=child.geometry.clone();tempGeometry.applyMatrix(child.matrix),child.geometry=tempGeometry,child.position.set(0,0,0),child.rotation.set(0,0,0),child.scale.set(1,1,1)}})},this.highlight=function(axis){this.traverse(function(child){child.material&&child.material.highlight&&(child.name===axis?child.material.highlight(!0):child.material.highlight(!1))})}},THREE.TransformGizmo.prototype=Object.create(THREE.Object3D.prototype),THREE.TransformGizmo.prototype.constructor=THREE.TransformGizmo,THREE.TransformGizmo.prototype.update=function(rotation,eye){var vec1=new THREE.Vector3(0,0,0),vec2=new THREE.Vector3(0,1,0),lookAtMatrix=new THREE.Matrix4;this.traverse(function(child){-1!==child.name.search("E")?child.quaternion.setFromRotationMatrix(lookAtMatrix.lookAt(eye,vec1,vec2)):(-1!==child.name.search("X")||-1!==child.name.search("Y")||-1!==child.name.search("Z"))&&child.quaternion.setFromEuler(rotation)})},THREE.TransformGizmoTranslate=function(){THREE.TransformGizmo.call(this);var arrowGeometry=new THREE.Geometry,mesh=new THREE.Mesh(new THREE.CylinderGeometry(0,.05,.2,12,1,!1));mesh.position.y=.5,mesh.updateMatrix(),arrowGeometry.merge(mesh.geometry,mesh.matrix);var lineXGeometry=new THREE.BufferGeometry;lineXGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,1,0,0],3));var lineYGeometry=new THREE.BufferGeometry;lineYGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,1,0],3));var lineZGeometry=new THREE.BufferGeometry;lineZGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,0,1],3)),this.handleGizmos={X:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:16711680})),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Line(lineXGeometry,new GizmoLineMaterial({color:16711680}))]],Y:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:65280})),[0,.5,0]],[new THREE.Line(lineYGeometry,new GizmoLineMaterial({color:65280}))]],Z:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:255})),[0,0,.5],[Math.PI/2,0,0]],[new THREE.Line(lineZGeometry,new GizmoLineMaterial({color:255}))]],XYZ:[[new THREE.Mesh(new THREE.OctahedronGeometry(.1,0),new GizmoMaterial({color:16777215,opacity:.25})),[0,0,0],[0,0,0]]],XY:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new GizmoMaterial({color:16776960,opacity:.25})),[.15,.15,0]]],YZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new GizmoMaterial({color:65535,opacity:.25})),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new GizmoMaterial({color:16711935,opacity:.25})),[.15,0,.15],[-Math.PI/2,0,0]]]},this.pickerGizmos={X:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[0,.6,0]]],Z:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.OctahedronGeometry(.2,0),pickerMaterial)]],XY:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),pickerMaterial),[.2,.2,0]]],YZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),pickerMaterial),[0,.2,.2],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),pickerMaterial),[.2,0,.2],[-Math.PI/2,0,0]]]},this.setActivePlane=function(axis,eye){var tempMatrix=new THREE.Matrix4;eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes.XY.matrixWorld))),"X"===axis&&(this.activePlane=this.planes.XY,Math.abs(eye.y)>Math.abs(eye.z)&&(this.activePlane=this.planes.XZ)),"Y"===axis&&(this.activePlane=this.planes.XY,Math.abs(eye.x)>Math.abs(eye.z)&&(this.activePlane=this.planes.YZ)),"Z"===axis&&(this.activePlane=this.planes.XZ,Math.abs(eye.x)>Math.abs(eye.y)&&(this.activePlane=this.planes.YZ)),"XYZ"===axis&&(this.activePlane=this.planes.XYZE),"XY"===axis&&(this.activePlane=this.planes.XY),"YZ"===axis&&(this.activePlane=this.planes.YZ),"XZ"===axis&&(this.activePlane=this.planes.XZ)},this.init()},THREE.TransformGizmoTranslate.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoTranslate.prototype.constructor=THREE.TransformGizmoTranslate,THREE.TransformGizmoRotate=function(){THREE.TransformGizmo.call(this);var CircleGeometry=function(radius,facing,arc){var geometry=new THREE.BufferGeometry,vertices=[];arc=arc?arc:1;for(var i=0;64*arc>=i;++i)"x"===facing&&vertices.push(0,Math.cos(i/32*Math.PI)*radius,Math.sin(i/32*Math.PI)*radius),"y"===facing&&vertices.push(Math.cos(i/32*Math.PI)*radius,0,Math.sin(i/32*Math.PI)*radius),"z"===facing&&vertices.push(Math.sin(i/32*Math.PI)*radius,Math.cos(i/32*Math.PI)*radius,0);return geometry.addAttribute("position",new THREE.Float32Attribute(vertices,3)),geometry};this.handleGizmos={X:[[new THREE.Line(new CircleGeometry(1,"x",.5),new GizmoLineMaterial({color:16711680}))]],Y:[[new THREE.Line(new CircleGeometry(1,"y",.5),new GizmoLineMaterial({color:65280}))]],Z:[[new THREE.Line(new CircleGeometry(1,"z",.5),new GizmoLineMaterial({color:255}))]],E:[[new THREE.Line(new CircleGeometry(1.25,"z",1),new GizmoLineMaterial({color:13421568}))]],XYZE:[[new THREE.Line(new CircleGeometry(1,"z",1),new GizmoLineMaterial({color:7895160}))]]},this.pickerGizmos={X:[[new THREE.Mesh(new THREE.TorusGeometry(1,.12,4,12,Math.PI),pickerMaterial),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.TorusGeometry(1,.12,4,12,Math.PI),pickerMaterial),[0,0,0],[Math.PI/2,0,0]]],Z:[[new THREE.Mesh(new THREE.TorusGeometry(1,.12,4,12,Math.PI),pickerMaterial),[0,0,0],[0,0,-Math.PI/2]]],E:[[new THREE.Mesh(new THREE.TorusGeometry(1.25,.12,2,24),pickerMaterial)]],XYZE:[[new THREE.Mesh(new THREE.Geometry)]]},this.setActivePlane=function(axis){"E"===axis&&(this.activePlane=this.planes.XYZE),"X"===axis&&(this.activePlane=this.planes.YZ),"Y"===axis&&(this.activePlane=this.planes.XZ),"Z"===axis&&(this.activePlane=this.planes.XY)},this.update=function(rotation,eye2){THREE.TransformGizmo.prototype.update.apply(this,arguments);var tempMatrix=({handles:this.handles,pickers:this.pickers},new THREE.Matrix4),worldRotation=new THREE.Euler(0,0,1),tempQuaternion=new THREE.Quaternion,unitX=new THREE.Vector3(1,0,0),unitY=new THREE.Vector3(0,1,0),unitZ=new THREE.Vector3(0,0,1),quaternionX=new THREE.Quaternion,quaternionY=new THREE.Quaternion,quaternionZ=new THREE.Quaternion,eye=eye2.clone();worldRotation.copy(this.planes.XY.rotation),tempQuaternion.setFromEuler(worldRotation),tempMatrix.makeRotationFromQuaternion(tempQuaternion).getInverse(tempMatrix),eye.applyMatrix4(tempMatrix),this.traverse(function(child){tempQuaternion.setFromEuler(worldRotation),"X"===child.name&&(quaternionX.setFromAxisAngle(unitX,Math.atan2(-eye.y,eye.z)),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionX),child.quaternion.copy(tempQuaternion)),"Y"===child.name&&(quaternionY.setFromAxisAngle(unitY,Math.atan2(eye.x,eye.z)),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionY),child.quaternion.copy(tempQuaternion)),"Z"===child.name&&(quaternionZ.setFromAxisAngle(unitZ,Math.atan2(eye.y,eye.x)),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionZ),child.quaternion.copy(tempQuaternion))})},this.init()},THREE.TransformGizmoRotate.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoRotate.prototype.constructor=THREE.TransformGizmoRotate,THREE.TransformGizmoScale=function(){THREE.TransformGizmo.call(this);var arrowGeometry=new THREE.Geometry,mesh=new THREE.Mesh(new THREE.BoxGeometry(.125,.125,.125));mesh.position.y=.5,mesh.updateMatrix(),arrowGeometry.merge(mesh.geometry,mesh.matrix);var lineXGeometry=new THREE.BufferGeometry;lineXGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,1,0,0],3));var lineYGeometry=new THREE.BufferGeometry;lineYGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,1,0],3));var lineZGeometry=new THREE.BufferGeometry;lineZGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,0,1],3)),this.handleGizmos={X:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:16711680})),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Line(lineXGeometry,new GizmoLineMaterial({color:16711680}))]],Y:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:65280})),[0,.5,0]],[new THREE.Line(lineYGeometry,new GizmoLineMaterial({color:65280}))]],Z:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:255})),[0,0,.5],[Math.PI/2,0,0]],[new THREE.Line(lineZGeometry,new GizmoLineMaterial({color:255}))]],XYZ:[[new THREE.Mesh(new THREE.BoxGeometry(.125,.125,.125),new GizmoMaterial({color:16777215,opacity:.25}))]]},this.pickerGizmos={X:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[0,.6,0]]],Z:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.BoxGeometry(.4,.4,.4),pickerMaterial)]]},this.setActivePlane=function(axis,eye){var tempMatrix=new THREE.Matrix4;eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes.XY.matrixWorld))),"X"===axis&&(this.activePlane=this.planes.XY,Math.abs(eye.y)>Math.abs(eye.z)&&(this.activePlane=this.planes.XZ)),"Y"===axis&&(this.activePlane=this.planes.XY,Math.abs(eye.x)>Math.abs(eye.z)&&(this.activePlane=this.planes.YZ)),"Z"===axis&&(this.activePlane=this.planes.XZ,Math.abs(eye.x)>Math.abs(eye.y)&&(this.activePlane=this.planes.YZ)),"XYZ"===axis&&(this.activePlane=this.planes.XYZE)},this.init()},THREE.TransformGizmoScale.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoScale.prototype.constructor=THREE.TransformGizmoScale,THREE.TransformControls=function(camera,domElement){function onPointerHover(event){if(void 0!==scope.object&&_dragging!==!0&&(void 0===event.button||0===event.button)){var pointer=event.changedTouches?event.changedTouches[0]:event,intersect=intersectObjects(pointer,_gizmo[_mode].pickers.children),axis=null;intersect&&(axis=intersect.object.name,event.preventDefault()),scope.axis!==axis&&(scope.axis=axis,scope.update(),scope.dispatchEvent(changeEvent))}}function onPointerDown(event){if(void 0!==scope.object&&_dragging!==!0&&(void 0===event.button||0===event.button)){var pointer=event.changedTouches?event.changedTouches[0]:event;if(0===pointer.button||void 0===pointer.button){var intersect=intersectObjects(pointer,_gizmo[_mode].pickers.children);if(intersect){event.preventDefault(),event.stopPropagation(),scope.dispatchEvent(mouseDownEvent),scope.axis=intersect.object.name,scope.update(),eye.copy(camPosition).sub(worldPosition).normalize(),_gizmo[_mode].setActivePlane(scope.axis,eye);var planeIntersect=intersectObjects(pointer,[_gizmo[_mode].activePlane]);planeIntersect&&(oldPosition.copy(scope.object.position),oldScale.copy(scope.object.scale),oldRotationMatrix.extractRotation(scope.object.matrix),worldRotationMatrix.extractRotation(scope.object.matrixWorld),parentRotationMatrix.extractRotation(scope.object.parent.matrixWorld),parentScale.setFromMatrixScale(tempMatrix.getInverse(scope.object.parent.matrixWorld)),offset.copy(planeIntersect.point))}}_dragging=!0}
}function onPointerMove(event){if(void 0!==scope.object&&null!==scope.axis&&_dragging!==!1&&(void 0===event.button||0===event.button)){var pointer=event.changedTouches?event.changedTouches[0]:event,planeIntersect=intersectObjects(pointer,[_gizmo[_mode].activePlane]);planeIntersect!==!1&&(event.preventDefault(),event.stopPropagation(),point.copy(planeIntersect.point),"translate"===_mode?(point.sub(offset),point.multiply(parentScale),"local"===scope.space&&(point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix)),-1===scope.axis.search("X")&&(point.x=0),-1===scope.axis.search("Y")&&(point.y=0),-1===scope.axis.search("Z")&&(point.z=0),point.applyMatrix4(oldRotationMatrix),scope.object.position.copy(oldPosition),scope.object.position.add(point)),("world"===scope.space||-1!==scope.axis.search("XYZ"))&&(-1===scope.axis.search("X")&&(point.x=0),-1===scope.axis.search("Y")&&(point.y=0),-1===scope.axis.search("Z")&&(point.z=0),point.applyMatrix4(tempMatrix.getInverse(parentRotationMatrix)),scope.object.position.copy(oldPosition),scope.object.position.add(point)),null!==scope.snap&&(-1!==scope.axis.search("X")&&(scope.object.position.x=Math.round(scope.object.position.x/scope.snap)*scope.snap),-1!==scope.axis.search("Y")&&(scope.object.position.y=Math.round(scope.object.position.y/scope.snap)*scope.snap),-1!==scope.axis.search("Z")&&(scope.object.position.z=Math.round(scope.object.position.z/scope.snap)*scope.snap))):"scale"===_mode?(point.sub(offset),point.multiply(parentScale),"local"===scope.space&&("XYZ"===scope.axis?(scale=1+point.y/50,scope.object.scale.x=oldScale.x*scale,scope.object.scale.y=oldScale.y*scale,scope.object.scale.z=oldScale.z*scale):(point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix)),"X"===scope.axis&&(scope.object.scale.x=oldScale.x*(1+point.x/50)),"Y"===scope.axis&&(scope.object.scale.y=oldScale.y*(1+point.y/50)),"Z"===scope.axis&&(scope.object.scale.z=oldScale.z*(1+point.z/50))))):"rotate"===_mode&&(point.sub(worldPosition),point.multiply(parentScale),tempVector.copy(offset).sub(worldPosition),tempVector.multiply(parentScale),"E"===scope.axis?(point.applyMatrix4(tempMatrix.getInverse(lookAtMatrix)),tempVector.applyMatrix4(tempMatrix.getInverse(lookAtMatrix)),rotation.set(Math.atan2(point.z,point.y),Math.atan2(point.x,point.z),Math.atan2(point.y,point.x)),offsetRotation.set(Math.atan2(tempVector.z,tempVector.y),Math.atan2(tempVector.x,tempVector.z),Math.atan2(tempVector.y,tempVector.x)),tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix)),quaternionE.setFromAxisAngle(eye,rotation.z-offsetRotation.z),quaternionXYZ.setFromRotationMatrix(worldRotationMatrix),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionE),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionXYZ),scope.object.quaternion.copy(tempQuaternion)):"XYZE"===scope.axis?(quaternionE.setFromEuler(point.clone().cross(tempVector).normalize()),tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix)),quaternionX.setFromAxisAngle(quaternionE,-point.clone().angleTo(tempVector)),quaternionXYZ.setFromRotationMatrix(worldRotationMatrix),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionX),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionXYZ),scope.object.quaternion.copy(tempQuaternion)):"local"===scope.space?(point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix)),tempVector.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix)),rotation.set(Math.atan2(point.z,point.y),Math.atan2(point.x,point.z),Math.atan2(point.y,point.x)),offsetRotation.set(Math.atan2(tempVector.z,tempVector.y),Math.atan2(tempVector.x,tempVector.z),Math.atan2(tempVector.y,tempVector.x)),quaternionXYZ.setFromRotationMatrix(oldRotationMatrix),quaternionX.setFromAxisAngle(unitX,rotation.x-offsetRotation.x),quaternionY.setFromAxisAngle(unitY,rotation.y-offsetRotation.y),quaternionZ.setFromAxisAngle(unitZ,rotation.z-offsetRotation.z),"X"===scope.axis&&quaternionXYZ.multiplyQuaternions(quaternionXYZ,quaternionX),"Y"===scope.axis&&quaternionXYZ.multiplyQuaternions(quaternionXYZ,quaternionY),"Z"===scope.axis&&quaternionXYZ.multiplyQuaternions(quaternionXYZ,quaternionZ),scope.object.quaternion.copy(quaternionXYZ)):"world"===scope.space&&(rotation.set(Math.atan2(point.z,point.y),Math.atan2(point.x,point.z),Math.atan2(point.y,point.x)),offsetRotation.set(Math.atan2(tempVector.z,tempVector.y),Math.atan2(tempVector.x,tempVector.z),Math.atan2(tempVector.y,tempVector.x)),tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix)),quaternionX.setFromAxisAngle(unitX,rotation.x-offsetRotation.x),quaternionY.setFromAxisAngle(unitY,rotation.y-offsetRotation.y),quaternionZ.setFromAxisAngle(unitZ,rotation.z-offsetRotation.z),quaternionXYZ.setFromRotationMatrix(worldRotationMatrix),"X"===scope.axis&&tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionX),"Y"===scope.axis&&tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionY),"Z"===scope.axis&&tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionZ),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionXYZ),scope.object.quaternion.copy(tempQuaternion))),scope.update(),scope.dispatchEvent(changeEvent),scope.dispatchEvent(objectChangeEvent))}}function onPointerUp(event){(void 0===event.button||0===event.button)&&(_dragging&&null!==scope.axis&&(mouseUpEvent.mode=_mode,scope.dispatchEvent(mouseUpEvent)),_dragging=!1,onPointerHover(event))}function intersectObjects(pointer,objects){var rect=domElement.getBoundingClientRect(),x=(pointer.clientX-rect.left)/rect.width,y=(pointer.clientY-rect.top)/rect.height;pointerVector.set(2*x-1,-(2*y)+1),ray.setFromCamera(pointerVector,camera);var intersections=ray.intersectObjects(objects,!0);return intersections[0]?intersections[0]:!1}THREE.Object3D.call(this),domElement=void 0!==domElement?domElement:document,this.object=void 0,this.visible=!1,this.snap=null,this.space="world",this.size=1,this.axis=null;var scope=this,_mode="translate",_dragging=!1,_gizmo={translate:new THREE.TransformGizmoTranslate,rotate:new THREE.TransformGizmoRotate,scale:new THREE.TransformGizmoScale};for(var type in _gizmo){var gizmoObj=_gizmo[type];gizmoObj.visible=type===_mode,this.add(gizmoObj)}var changeEvent={type:"change"},mouseDownEvent={type:"mouseDown"},mouseUpEvent={type:"mouseUp",mode:_mode},objectChangeEvent={type:"objectChange"},ray=new THREE.Raycaster,pointerVector=new THREE.Vector2,point=new THREE.Vector3,offset=new THREE.Vector3,rotation=new THREE.Vector3,offsetRotation=new THREE.Vector3,scale=1,lookAtMatrix=new THREE.Matrix4,eye=new THREE.Vector3,tempMatrix=new THREE.Matrix4,tempVector=new THREE.Vector3,tempQuaternion=new THREE.Quaternion,unitX=new THREE.Vector3(1,0,0),unitY=new THREE.Vector3(0,1,0),unitZ=new THREE.Vector3(0,0,1),quaternionXYZ=new THREE.Quaternion,quaternionX=new THREE.Quaternion,quaternionY=new THREE.Quaternion,quaternionZ=new THREE.Quaternion,quaternionE=new THREE.Quaternion,oldPosition=new THREE.Vector3,oldScale=new THREE.Vector3,oldRotationMatrix=new THREE.Matrix4,parentRotationMatrix=new THREE.Matrix4,parentScale=new THREE.Vector3,worldPosition=new THREE.Vector3,worldRotation=new THREE.Euler,worldRotationMatrix=new THREE.Matrix4,camPosition=new THREE.Vector3,camRotation=new THREE.Euler;domElement.addEventListener("mousedown",onPointerDown,!1),domElement.addEventListener("touchstart",onPointerDown,!1),domElement.addEventListener("mousemove",onPointerHover,!1),domElement.addEventListener("touchmove",onPointerHover,!1),domElement.addEventListener("mousemove",onPointerMove,!1),domElement.addEventListener("touchmove",onPointerMove,!1),domElement.addEventListener("mouseup",onPointerUp,!1),domElement.addEventListener("mouseout",onPointerUp,!1),domElement.addEventListener("touchend",onPointerUp,!1),domElement.addEventListener("touchcancel",onPointerUp,!1),domElement.addEventListener("touchleave",onPointerUp,!1),this.dispose=function(){domElement.removeEventListener("mousedown",onPointerDown),domElement.removeEventListener("touchstart",onPointerDown),domElement.removeEventListener("mousemove",onPointerHover),domElement.removeEventListener("touchmove",onPointerHover),domElement.removeEventListener("mousemove",onPointerMove),domElement.removeEventListener("touchmove",onPointerMove),domElement.removeEventListener("mouseup",onPointerUp),domElement.removeEventListener("mouseout",onPointerUp),domElement.removeEventListener("touchend",onPointerUp),domElement.removeEventListener("touchcancel",onPointerUp),domElement.removeEventListener("touchleave",onPointerUp)},this.attach=function(object){this.object=object,this.visible=!0,this.update()},this.detach=function(){this.object=void 0,this.visible=!1,this.axis=null},this.setMode=function(mode){_mode=mode?mode:_mode,"scale"===_mode&&(scope.space="local");for(var type in _gizmo)_gizmo[type].visible=type===_mode;this.update(),scope.dispatchEvent(changeEvent)},this.setSnap=function(snap){scope.snap=snap},this.setSize=function(size){scope.size=size,this.update(),scope.dispatchEvent(changeEvent)},this.setSpace=function(space){scope.space=space,this.update(),scope.dispatchEvent(changeEvent)},this.update=function(){void 0!==scope.object&&(scope.object.updateMatrixWorld(),worldPosition.setFromMatrixPosition(scope.object.matrixWorld),worldRotation.setFromRotationMatrix(tempMatrix.extractRotation(scope.object.matrixWorld)),camera.updateMatrixWorld(),camPosition.setFromMatrixPosition(camera.matrixWorld),camRotation.setFromRotationMatrix(tempMatrix.extractRotation(camera.matrixWorld)),scale=worldPosition.distanceTo(camPosition)/6*scope.size,this.position.copy(worldPosition),this.scale.set(scale,scale,scale),eye.copy(camPosition).sub(worldPosition).normalize(),"local"===scope.space?_gizmo[_mode].update(worldRotation,eye):"world"===scope.space&&_gizmo[_mode].update(new THREE.Euler,eye),_gizmo[_mode].highlight(scope.axis))}},THREE.TransformControls.prototype=Object.create(THREE.Object3D.prototype),THREE.TransformControls.prototype.constructor=THREE.TransformControls}();var FOUR=FOUR||{};FOUR.WalkController=function(){function WalkController(config){THREE.EventDispatcher.call(this);var self=this;self.SINGLE_CLICK_TIMEOUT=400,self.KEY={CANCEL:27,CTRL:17,MOVE_TO_EYE_HEIGHT:192,MOVE_FORWARD:38,MOVE_LEFT:37,MOVE_BACK:40,MOVE_RIGHT:39,MOVE_UP:221,MOVE_DOWN:219},self.MOUSE_STATE={DOWN:0,UP:1},self.camera=config.camera||config.viewport.camera,self.domElement=config.domElement||config.viewport.domElement,self.enabled=!1,self.enforceWalkHeight=!1,self.listeners={},self.lookChange=!1,self.lookSpeed=.85,self.modifiers={ALT:!1,CTRL:!1,SHIFT:!1},self.mouse={direction:new THREE.Vector2,end:{x:0,y:0},start:{x:0,y:0},state:self.MOUSE_STATE.UP},self.move={forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1},self.movementSpeed=100,self.raycaster=new THREE.Raycaster,self.timeout=null,self.viewport=config.viewport,self.walkHeight=null,self.viewHalfX=self.domElement.offsetWidth/2,self.viewHalfY=self.domElement.offsetHeight/2,self.domElement.setAttribute("tabindex",-1),Object.keys(config).forEach(function(key){self[key]=config[key]})}return WalkController.prototype=Object.create(THREE.EventDispatcher.prototype),WalkController.prototype.constructor=WalkController,WalkController.prototype.WALK_HEIGHT=2,WalkController.prototype.contextMenu=function(event){event.preventDefault()},WalkController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},WalkController.prototype.emit=function(event){this.dispatchEvent({type:event||"update"})},WalkController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"mousedown",self.onMouseDown),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseup",self.onMouseUp),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.enabled=!0,self.setWalkHeight()},WalkController.prototype.getWalkHeight=function(position){return 0},WalkController.prototype.handleDoubleClick=function(selected){var self=this;self.modifiers[self.KEY.CTRL]?self.dispatchEvent({type:"lookat",position:selected.point,object:selected.object}):self.dispatchEvent({type:"navigate",position:selected.point,object:selected.object})},WalkController.prototype.handleSingleClick=function(){},WalkController.prototype.onKeyDown=function(event){var self=this;if(self.enabled)switch(event.keyCode){case self.KEY.CTRL:self.modifiers[self.KEY.CTRL]=!0;break;case self.KEY.MOVE_TO_EYE_HEIGHT:self.setWalkHeight();break;case self.KEY.MOVE_FORWARD:self.move.forward=!0;break;case self.KEY.MOVE_BACK:self.move.backward=!0;break;case self.KEY.MOVE_LEFT:self.move.left=!0;break;case self.KEY.MOVE_RIGHT:self.move.right=!0;break;case self.KEY.MOVE_UP:self.move.up=!0;break;case self.KEY.MOVE_DOWN:self.move.down=!0}},WalkController.prototype.onKeyUp=function(event){var self=this;switch(event.keyCode){case self.KEY.CTRL:self.modifiers[self.KEY.CTRL]=!1;break;case self.KEY.MOVE_FORWARD:self.move.forward=!1;break;case self.KEY.MOVE_BACK:self.move.backward=!1;break;case self.KEY.MOVE_LEFT:self.move.left=!1;break;case self.KEY.MOVE_RIGHT:self.move.right=!1;break;case self.KEY.MOVE_UP:self.move.up=!1;break;case self.KEY.MOVE_DOWN:self.move.down=!1;break;case self.KEY.CANCEL:Object.keys(self.move).forEach(function(key){self.move[key]=!1}),self.lookChange=!1}},WalkController.prototype.onMouseDown=function(event){var self=this;if(self.lookChange=!1,self.mouse.state=self.MOUSE_STATE.DOWN,self.mouse.start=new THREE.Vector2(event.pageX-self.domElement.offsetLeft-self.viewHalfX,event.pageY-self.domElement.offsetTop-self.viewHalfY),null!==self.timeout){clearTimeout(self.timeout),self.timeout=null,self.mouse.end.x=event.offsetX/self.viewport.domElement.clientWidth*2-1,self.mouse.end.y=2*-(event.offsetY/self.viewport.domElement.clientHeight)+1,self.raycaster.setFromCamera(self.mouse.end,self.viewport.camera);var intersects=self.raycaster.intersectObjects(self.viewport.scene.model.children,!0);intersects&&intersects.length>0&&self.handleDoubleClick(intersects[0])}else self.timeout=setTimeout(function(){clearTimeout(self.timeout),self.timeout=null},self.SINGLE_CLICK_TIMEOUT)},WalkController.prototype.onMouseMove=function(event){var self=this;self.mouse.state===self.MOUSE_STATE.DOWN&&(self.lookChange=!0,self.mouse.end=new THREE.Vector2(event.pageX-self.domElement.offsetLeft-self.viewHalfX,event.pageY-self.domElement.offsetTop-self.viewHalfY),self.mouse.direction=new THREE.Vector2(self.mouse.end.x/self.domElement.clientWidth*2,self.mouse.end.y/self.domElement.clientHeight*2))},WalkController.prototype.onMouseUp=function(event){var self=this;self.lookChange=!1,self.mouse.state=self.MOUSE_STATE.UP},WalkController.prototype.onResize=function(){console.log("resize")},WalkController.prototype.setWalkHeight=function(){var self=this;return self.camera.resetOrientation(self.emit.bind(self)).then(function(){self.camera.setPositionAndTarget(self.camera.position.x,self.camera.position.y,self.WALK_HEIGHT,self.camera.target.x,self.camera.target.y,self.WALK_HEIGHT)})},WalkController.prototype.update=function(delta){var self=this;if(self.enabled){var distance=delta*self.movementSpeed,change=!1;self.move.forward&&(self.camera.translateZ(-distance),change=!0),self.move.backward&&(self.camera.translateZ(distance),change=!0),self.move.right&&(self.camera.translateX(distance),change=!0),self.move.left&&(self.camera.translateX(-distance),change=!0),self.move.up&&(self.camera.translateY(-distance),change=!0),self.move.down&&(self.camera.translateY(distance),change=!0),self.lookChange&&(self.camera.rotateOnAxis(new THREE.Vector3(0,1,0),2*Math.PI/360*-self.mouse.direction.x*self.lookSpeed),change=!0),change&&self.dispatchEvent({type:"change"})}},WalkController}();var TravellingSalesman=function(){function Tour(){this.distance=0,this.fitness=0,this.tour=[];for(var i=0;i<Itinerary.length;i++)this.tour.push(null)}function Population(populationSize,initialise){this.tours=[];var i;for(i=0;populationSize>i;i++)this.tours.push(null);if(initialise)for(i=0;populationSize>i;i++){var newTour=new Tour;newTour.generateIndividual(),this.tours[i]=newTour}}function TravellingSalesman(populationSize){this.elitism=!0,this.mutationRate=.015,this.population=null,this.populationSize=populationSize,this.tournamentSize=5}var Itinerary=[];return Tour.prototype.checkForDuplicateValues=function(){var i;for(i=0;i<this.tour.length;i++){var p=this.tour[i];if(this.tour.lastIndexOf(p)!==i)throw new Error("Tour contains a duplicate element")}},Tour.prototype.checkForNullValues=function(){var i;for(i=0;i<this.tour.length;i++)if(null===this.tour[i])throw new Error("Tour contains a null entry")},Tour.prototype.containsPoint=function(p){var result=!1;return this.tour.forEach(function(point){point&&point.x===p.x&&point.y===p.y&&(result=!0)}),result},Tour.prototype.distanceBetween=function(p1,p2){var dx=Math.abs(p2.x-p1.x),dy=Math.abs(p2.y-p1.y);return Math.sqrt(dx*dx+dy*dy)},Tour.prototype.generateIndividual=function(){for(var i=0;i<Itinerary.length;i++)this.setPoint(i,Itinerary[i]);this.shuffle()},Tour.prototype.getPoint=function(i){return this.tour[i]},Tour.prototype.getFitness=function(){return 0===this.fitness&&(this.fitness=1/this.getDistance()),this.fitness},Tour.prototype.getDistance=function(){if(0===this.distance){var i,p1,p2,totalDistance=0;for(i=0;i<this.tour.length;i++)p1=this.getPoint(i),p2=i+1<this.tour.length?this.tour[i+1]:this.tour[0],totalDistance+=this.distanceBetween(p1,p2);this.distance=totalDistance}return this.distance},Tour.prototype.init=function(){for(var i=0;i<Itinerary.length;i++)this.tour.push(null)},Tour.prototype.setPoint=function(i,point){this.tour[i]=point,this.fitness=0,this.distance=0},Tour.prototype.shuffle=function(){for(var temporaryValue,randomIndex,currentIndex=this.tour.length;0!==currentIndex;)randomIndex=Math.floor(Math.random()*currentIndex),currentIndex-=1,temporaryValue=this.tour[currentIndex],this.tour[currentIndex]=this.tour[randomIndex],this.tour[randomIndex]=temporaryValue},Tour.prototype.tourSize=function(){return this.tour.length},Population.prototype.getFittest=function(){var i,fittest=this.tours[0];for(i=1;i<this.tours.length;i++)fittest.getFitness()<=this.tours[i].getFitness()&&(fittest=this.tours[i]);return fittest},Population.prototype.getPopulationSize=function(){return this.tours.length},Population.prototype.getTour=function(i){return this.tours[i]},Population.prototype.saveTour=function(i,tour){this.tours[i]=tour},TravellingSalesman.prototype.addPoint=function(obj){Itinerary.push(obj)},TravellingSalesman.prototype.crossover=function(parent1,parent2){var i,ii,child=new Tour,startPos=Math.floor(Math.random()*parent1.tourSize()),endPos=Math.floor(Math.random()*parent1.tourSize());for(i=0;i<child.tourSize();i++)endPos>startPos&&i>startPos&&endPos>i?child.setPoint(i,parent1.getPoint(i)):startPos>endPos&&(startPos>i&&i>endPos||child.setPoint(i,parent1.getPoint(i)));for(i=0;i<parent2.tourSize();i++)if(!child.containsPoint(parent2.getPoint(i)))for(ii=0;ii<child.tourSize();ii++)if(null===child.getPoint(ii)){child.setPoint(ii,parent2.getPoint(i));break}return child.checkForNullValues(),child.checkForDuplicateValues(),child},TravellingSalesman.prototype.evolve=function(generations){this.population=this.evolvePopulation(this.population);for(var i=0;generations>i;i++)this.population=this.evolvePopulation(this.population)},TravellingSalesman.prototype.evolvePopulation=function(pop){var i,newPopulation=new Population(pop.getPopulationSize(),!1),elitismOffset=0;for(this.elitism&&(newPopulation.saveTour(0,pop.getFittest()),elitismOffset=1),i=elitismOffset;i<newPopulation.getPopulationSize();i++){var parent1=this.tournamentSelection(pop),parent2=this.tournamentSelection(pop),childTour=this.crossover(parent1,parent2);newPopulation.saveTour(i,childTour)}for(i=elitismOffset;i<newPopulation.getPopulationSize();i++)this.mutate(newPopulation.getTour(i));return newPopulation},TravellingSalesman.prototype.getPopulation=function(){return this.population},TravellingSalesman.prototype.getSolution=function(){return this.population.getFittest().tour},TravellingSalesman.prototype.init=function(){this.population=new Population(this.populationSize,!0)},TravellingSalesman.prototype.mutate=function(tour){for(var tourPos1=0;tourPos1<tour.tourSize();tourPos1++)if(Math.random()<this.mutationRate){var tourPos2=Math.floor(tour.tourSize()*Math.random()),point1=tour.getPoint(tourPos1),point2=tour.getPoint(tourPos2);tour.setPoint(tourPos2,point1),tour.setPoint(tourPos1,point2)}},TravellingSalesman.prototype.setPoints=function(points){var tourManager=Itinerary;points.forEach(function(point){tourManager.push(point)})},TravellingSalesman.prototype.tournamentSelection=function(pop){for(var tournament=new Population(this.tournamentSize,!1),i=0;i<this.tournamentSize;i++){var randomId=Math.floor(Math.random()*pop.getPopulationSize());tournament.saveTour(i,pop.getTour(randomId))}return tournament.getFittest()},TravellingSalesman}();
//# sourceMappingURL=four.min.js.map